/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhooksResendItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhooksResendItem{}

// WebhooksResendItem struct for WebhooksResendItem
type WebhooksResendItem struct {
	// ID of the resource whose webhooks are to be retriggered.
	ResourceId string `json:"resource_id"`
	// The events that should retrigger webhooks. Accepts values check.completed.
	Event WebhookEventType `json:"event"`
}

type _WebhooksResendItem WebhooksResendItem

// NewWebhooksResendItem instantiates a new WebhooksResendItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhooksResendItem(resourceId string, event WebhookEventType) *WebhooksResendItem {
	this := WebhooksResendItem{}
	this.ResourceId = resourceId
	this.Event = event
	return &this
}

// NewWebhooksResendItemWithDefaults instantiates a new WebhooksResendItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksResendItemWithDefaults() *WebhooksResendItem {
	this := WebhooksResendItem{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *WebhooksResendItem) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *WebhooksResendItem) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *WebhooksResendItem) SetResourceId(v string) {
	o.ResourceId = v
}

// GetEvent returns the Event field value
func (o *WebhooksResendItem) GetEvent() WebhookEventType {
	if o == nil {
		var ret WebhookEventType
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *WebhooksResendItem) GetEventOk() (*WebhookEventType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *WebhooksResendItem) SetEvent(v WebhookEventType) {
	o.Event = v
}

func (o WebhooksResendItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhooksResendItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_id"] = o.ResourceId
	toSerialize["event"] = o.Event
	return toSerialize, nil
}

func (o *WebhooksResendItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resource_id",
		"event",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhooksResendItem := _WebhooksResendItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhooksResendItem)

	if err != nil {
		return err
	}

	*o = WebhooksResendItem(varWebhooksResendItem)

	return err
}

type NullableWebhooksResendItem struct {
	value *WebhooksResendItem
	isSet bool
}

func (v NullableWebhooksResendItem) Get() *WebhooksResendItem {
	return v.value
}

func (v *NullableWebhooksResendItem) Set(val *WebhooksResendItem) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooksResendItem) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooksResendItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooksResendItem(val *WebhooksResendItem) *NullableWebhooksResendItem {
	return &NullableWebhooksResendItem{value: val, isSet: true}
}

func (v NullableWebhooksResendItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooksResendItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


