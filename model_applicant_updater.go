/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApplicantUpdater type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicantUpdater{}

// ApplicantUpdater struct for ApplicantUpdater
type ApplicantUpdater struct {
	// The applicant's email address. Required if doing a US check, or a UK check for which `applicant_provides_data` is `true`.
	Email *string `json:"email,omitempty"`
	// The applicant's date of birth
	Dob *string `json:"dob,omitempty"`
	IdNumbers []IdNumber `json:"id_numbers,omitempty"`
	// The applicant's phone number
	PhoneNumber *string `json:"phone_number,omitempty"`
	Consents *ConsentsBuilder `json:"consents,omitempty"`
	Address *AddressBuilder `json:"address,omitempty"`
	Location *LocationBuilder `json:"location,omitempty"`
	// The applicant's first name
	FirstName *string `json:"first_name,omitempty" validate:"regexp=^[^!#$%*=<>;{}\\"]*$"`
	// The applicant's surname
	LastName *string `json:"last_name,omitempty" validate:"regexp=^[^!#$%*=<>;{}\\"]*$"`
}

// NewApplicantUpdater instantiates a new ApplicantUpdater object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicantUpdater() *ApplicantUpdater {
	this := ApplicantUpdater{}
	return &this
}

// NewApplicantUpdaterWithDefaults instantiates a new ApplicantUpdater object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicantUpdaterWithDefaults() *ApplicantUpdater {
	this := ApplicantUpdater{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApplicantUpdater) SetEmail(v string) {
	o.Email = &v
}

// GetDob returns the Dob field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetDob() string {
	if o == nil || IsNil(o.Dob) {
		var ret string
		return ret
	}
	return *o.Dob
}

// GetDobOk returns a tuple with the Dob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetDobOk() (*string, bool) {
	if o == nil || IsNil(o.Dob) {
		return nil, false
	}
	return o.Dob, true
}

// HasDob returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasDob() bool {
	if o != nil && !IsNil(o.Dob) {
		return true
	}

	return false
}

// SetDob gets a reference to the given string and assigns it to the Dob field.
func (o *ApplicantUpdater) SetDob(v string) {
	o.Dob = &v
}

// GetIdNumbers returns the IdNumbers field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetIdNumbers() []IdNumber {
	if o == nil || IsNil(o.IdNumbers) {
		var ret []IdNumber
		return ret
	}
	return o.IdNumbers
}

// GetIdNumbersOk returns a tuple with the IdNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetIdNumbersOk() ([]IdNumber, bool) {
	if o == nil || IsNil(o.IdNumbers) {
		return nil, false
	}
	return o.IdNumbers, true
}

// HasIdNumbers returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasIdNumbers() bool {
	if o != nil && !IsNil(o.IdNumbers) {
		return true
	}

	return false
}

// SetIdNumbers gets a reference to the given []IdNumber and assigns it to the IdNumbers field.
func (o *ApplicantUpdater) SetIdNumbers(v []IdNumber) {
	o.IdNumbers = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *ApplicantUpdater) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetConsents returns the Consents field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetConsents() ConsentsBuilder {
	if o == nil || IsNil(o.Consents) {
		var ret ConsentsBuilder
		return ret
	}
	return *o.Consents
}

// GetConsentsOk returns a tuple with the Consents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetConsentsOk() (*ConsentsBuilder, bool) {
	if o == nil || IsNil(o.Consents) {
		return nil, false
	}
	return o.Consents, true
}

// HasConsents returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasConsents() bool {
	if o != nil && !IsNil(o.Consents) {
		return true
	}

	return false
}

// SetConsents gets a reference to the given ConsentsBuilder and assigns it to the Consents field.
func (o *ApplicantUpdater) SetConsents(v ConsentsBuilder) {
	o.Consents = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetAddress() AddressBuilder {
	if o == nil || IsNil(o.Address) {
		var ret AddressBuilder
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetAddressOk() (*AddressBuilder, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressBuilder and assigns it to the Address field.
func (o *ApplicantUpdater) SetAddress(v AddressBuilder) {
	o.Address = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetLocation() LocationBuilder {
	if o == nil || IsNil(o.Location) {
		var ret LocationBuilder
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetLocationOk() (*LocationBuilder, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given LocationBuilder and assigns it to the Location field.
func (o *ApplicantUpdater) SetLocation(v LocationBuilder) {
	o.Location = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ApplicantUpdater) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ApplicantUpdater) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdater) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ApplicantUpdater) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ApplicantUpdater) SetLastName(v string) {
	o.LastName = &v
}

func (o ApplicantUpdater) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicantUpdater) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Dob) {
		toSerialize["dob"] = o.Dob
	}
	if !IsNil(o.IdNumbers) {
		toSerialize["id_numbers"] = o.IdNumbers
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.Consents) {
		toSerialize["consents"] = o.Consents
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	return toSerialize, nil
}

type NullableApplicantUpdater struct {
	value *ApplicantUpdater
	isSet bool
}

func (v NullableApplicantUpdater) Get() *ApplicantUpdater {
	return v.value
}

func (v *NullableApplicantUpdater) Set(val *ApplicantUpdater) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicantUpdater) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicantUpdater) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicantUpdater(val *ApplicantUpdater) *NullableApplicantUpdater {
	return &NullableApplicantUpdater{value: val, isSet: true}
}

func (v NullableApplicantUpdater) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicantUpdater) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


