/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApplicantShared type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicantShared{}

// ApplicantShared struct for ApplicantShared
type ApplicantShared struct {
	// The applicant's email address. Required if doing a US check, or a UK check for which `applicant_provides_data` is `true`.
	Email *string `json:"email,omitempty"`
	// The applicant's date of birth
	Dob *string `json:"dob,omitempty"`
	IdNumbers []IdNumber `json:"id_numbers,omitempty"`
	// The applicant's phone number
	PhoneNumber *string `json:"phone_number,omitempty"`
}

// NewApplicantShared instantiates a new ApplicantShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicantShared() *ApplicantShared {
	this := ApplicantShared{}
	return &this
}

// NewApplicantSharedWithDefaults instantiates a new ApplicantShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicantSharedWithDefaults() *ApplicantShared {
	this := ApplicantShared{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApplicantShared) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantShared) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApplicantShared) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApplicantShared) SetEmail(v string) {
	o.Email = &v
}

// GetDob returns the Dob field value if set, zero value otherwise.
func (o *ApplicantShared) GetDob() string {
	if o == nil || IsNil(o.Dob) {
		var ret string
		return ret
	}
	return *o.Dob
}

// GetDobOk returns a tuple with the Dob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantShared) GetDobOk() (*string, bool) {
	if o == nil || IsNil(o.Dob) {
		return nil, false
	}
	return o.Dob, true
}

// HasDob returns a boolean if a field has been set.
func (o *ApplicantShared) HasDob() bool {
	if o != nil && !IsNil(o.Dob) {
		return true
	}

	return false
}

// SetDob gets a reference to the given string and assigns it to the Dob field.
func (o *ApplicantShared) SetDob(v string) {
	o.Dob = &v
}

// GetIdNumbers returns the IdNumbers field value if set, zero value otherwise.
func (o *ApplicantShared) GetIdNumbers() []IdNumber {
	if o == nil || IsNil(o.IdNumbers) {
		var ret []IdNumber
		return ret
	}
	return o.IdNumbers
}

// GetIdNumbersOk returns a tuple with the IdNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantShared) GetIdNumbersOk() ([]IdNumber, bool) {
	if o == nil || IsNil(o.IdNumbers) {
		return nil, false
	}
	return o.IdNumbers, true
}

// HasIdNumbers returns a boolean if a field has been set.
func (o *ApplicantShared) HasIdNumbers() bool {
	if o != nil && !IsNil(o.IdNumbers) {
		return true
	}

	return false
}

// SetIdNumbers gets a reference to the given []IdNumber and assigns it to the IdNumbers field.
func (o *ApplicantShared) SetIdNumbers(v []IdNumber) {
	o.IdNumbers = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *ApplicantShared) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantShared) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *ApplicantShared) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *ApplicantShared) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

func (o ApplicantShared) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicantShared) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Dob) {
		toSerialize["dob"] = o.Dob
	}
	if !IsNil(o.IdNumbers) {
		toSerialize["id_numbers"] = o.IdNumbers
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	return toSerialize, nil
}

type NullableApplicantShared struct {
	value *ApplicantShared
	isSet bool
}

func (v NullableApplicantShared) Get() *ApplicantShared {
	return v.value
}

func (v *NullableApplicantShared) Set(val *ApplicantShared) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicantShared) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicantShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicantShared(val *ApplicantShared) *NullableApplicantShared {
	return &NullableApplicantShared{value: val, isSet: true}
}

func (v NullableApplicantShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicantShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


