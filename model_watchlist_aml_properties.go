/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WatchlistAmlProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchlistAmlProperties{}

// WatchlistAmlProperties struct for WatchlistAmlProperties
type WatchlistAmlProperties struct {
	// Returns any matches including, but not limited to, name and date of birth of match, aliases and associates, and relevant events and sources.
	Records []string `json:"records,omitempty"`
}

// NewWatchlistAmlProperties instantiates a new WatchlistAmlProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchlistAmlProperties() *WatchlistAmlProperties {
	this := WatchlistAmlProperties{}
	return &this
}

// NewWatchlistAmlPropertiesWithDefaults instantiates a new WatchlistAmlProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchlistAmlPropertiesWithDefaults() *WatchlistAmlProperties {
	this := WatchlistAmlProperties{}
	return &this
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *WatchlistAmlProperties) GetRecords() []string {
	if o == nil || IsNil(o.Records) {
		var ret []string
		return ret
	}
	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAmlProperties) GetRecordsOk() ([]string, bool) {
	if o == nil || IsNil(o.Records) {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *WatchlistAmlProperties) HasRecords() bool {
	if o != nil && !IsNil(o.Records) {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []string and assigns it to the Records field.
func (o *WatchlistAmlProperties) SetRecords(v []string) {
	o.Records = v
}

func (o WatchlistAmlProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchlistAmlProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Records) {
		toSerialize["records"] = o.Records
	}
	return toSerialize, nil
}

type NullableWatchlistAmlProperties struct {
	value *WatchlistAmlProperties
	isSet bool
}

func (v NullableWatchlistAmlProperties) Get() *WatchlistAmlProperties {
	return v.value
}

func (v *NullableWatchlistAmlProperties) Set(val *WatchlistAmlProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchlistAmlProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchlistAmlProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchlistAmlProperties(val *WatchlistAmlProperties) *NullableWatchlistAmlProperties {
	return &NullableWatchlistAmlProperties{value: val, isSet: true}
}

func (v NullableWatchlistAmlProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchlistAmlProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


