/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeviceIntelligenceBreakdownPropertiesDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceIntelligenceBreakdownPropertiesDevice{}

// DeviceIntelligenceBreakdownPropertiesDevice struct for DeviceIntelligenceBreakdownPropertiesDevice
type DeviceIntelligenceBreakdownPropertiesDevice struct {
	// The SDK version that was used.
	SdkVersion *string `json:"sdk_version,omitempty"`
	// The SDK used to upload the media.
	SdkSource *string `json:"sdk_source,omitempty"`
	// The token used to authenticate the request.
	AuthenticationType *string `json:"authentication_type,omitempty"`
	// The model as set by the phone manufacturer (for Android and iOS) or the browser manufacturer (for Web). The model can be presented in name or number form depending on each manufacturer implementation.
	RawModel *string `json:"raw_model,omitempty"`
	// The operating system of the device. The value came from manufacturer implementation (for Android and iOS) or browser's user agent (for Web).
	Os *string `json:"os,omitempty"`
	// The browser name reported by the browser's user agent.
	Browser *string `json:"browser,omitempty"`
	// Whether the device is an emulator.
	Emulator *bool `json:"emulator,omitempty"`
	// Whether the device is providing false randomized device and network information.
	RandomizedDevice *bool `json:"randomized_device,omitempty"`
	// Whether device is using stolen security tokens to send the network information.
	FakeNetworkRequest *bool `json:"fake_network_request,omitempty"`
	// The true operating system of the device.
	// Deprecated
	TrueOs *string `json:"true_os,omitempty"`
	// The likelihood of an operating system anomaly between the true OS and the OS sent by the device.
	// Deprecated
	OsAnomaly *string `json:"os_anomaly,omitempty"`
	// Whether the device is rooted.
	// Deprecated
	Rooted *bool `json:"rooted,omitempty"`
	// Whether the device is controlled via remote software.
	// Deprecated
	RemoteSoftware *bool `json:"remote_software,omitempty"`
	// Whether there is highly suspicious traffic related to the IP address. The risk depends on the overall ratio of clear checks on a given IP.
	IpReputation *string `json:"ip_reputation,omitempty"`
	// The number of times the device was used to create a report for a new applicant. A value greater than 1 indicates potential device reuse.
	DeviceFingerprintReuse *int32 `json:"device_fingerprint_reuse,omitempty"`
	// Whether the document or biometric media were uploaded from a single device.
	SingleDeviceUsed NullableBool `json:"single_device_used,omitempty"`
	// Whether the document media were live captured from the device camera.
	DocumentCapture *string `json:"document_capture,omitempty"`
	// Whether the biometric media were live captured from the device camera.
	BiometricCapture *string `json:"biometric_capture,omitempty"`
}

// NewDeviceIntelligenceBreakdownPropertiesDevice instantiates a new DeviceIntelligenceBreakdownPropertiesDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceIntelligenceBreakdownPropertiesDevice() *DeviceIntelligenceBreakdownPropertiesDevice {
	this := DeviceIntelligenceBreakdownPropertiesDevice{}
	return &this
}

// NewDeviceIntelligenceBreakdownPropertiesDeviceWithDefaults instantiates a new DeviceIntelligenceBreakdownPropertiesDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceIntelligenceBreakdownPropertiesDeviceWithDefaults() *DeviceIntelligenceBreakdownPropertiesDevice {
	this := DeviceIntelligenceBreakdownPropertiesDevice{}
	return &this
}

// GetSdkVersion returns the SdkVersion field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetSdkVersion() string {
	if o == nil || IsNil(o.SdkVersion) {
		var ret string
		return ret
	}
	return *o.SdkVersion
}

// GetSdkVersionOk returns a tuple with the SdkVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetSdkVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SdkVersion) {
		return nil, false
	}
	return o.SdkVersion, true
}

// HasSdkVersion returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasSdkVersion() bool {
	if o != nil && !IsNil(o.SdkVersion) {
		return true
	}

	return false
}

// SetSdkVersion gets a reference to the given string and assigns it to the SdkVersion field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetSdkVersion(v string) {
	o.SdkVersion = &v
}

// GetSdkSource returns the SdkSource field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetSdkSource() string {
	if o == nil || IsNil(o.SdkSource) {
		var ret string
		return ret
	}
	return *o.SdkSource
}

// GetSdkSourceOk returns a tuple with the SdkSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetSdkSourceOk() (*string, bool) {
	if o == nil || IsNil(o.SdkSource) {
		return nil, false
	}
	return o.SdkSource, true
}

// HasSdkSource returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasSdkSource() bool {
	if o != nil && !IsNil(o.SdkSource) {
		return true
	}

	return false
}

// SetSdkSource gets a reference to the given string and assigns it to the SdkSource field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetSdkSource(v string) {
	o.SdkSource = &v
}

// GetAuthenticationType returns the AuthenticationType field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetAuthenticationType() string {
	if o == nil || IsNil(o.AuthenticationType) {
		var ret string
		return ret
	}
	return *o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetAuthenticationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationType) {
		return nil, false
	}
	return o.AuthenticationType, true
}

// HasAuthenticationType returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasAuthenticationType() bool {
	if o != nil && !IsNil(o.AuthenticationType) {
		return true
	}

	return false
}

// SetAuthenticationType gets a reference to the given string and assigns it to the AuthenticationType field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetAuthenticationType(v string) {
	o.AuthenticationType = &v
}

// GetRawModel returns the RawModel field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetRawModel() string {
	if o == nil || IsNil(o.RawModel) {
		var ret string
		return ret
	}
	return *o.RawModel
}

// GetRawModelOk returns a tuple with the RawModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetRawModelOk() (*string, bool) {
	if o == nil || IsNil(o.RawModel) {
		return nil, false
	}
	return o.RawModel, true
}

// HasRawModel returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasRawModel() bool {
	if o != nil && !IsNil(o.RawModel) {
		return true
	}

	return false
}

// SetRawModel gets a reference to the given string and assigns it to the RawModel field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetRawModel(v string) {
	o.RawModel = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetOs() string {
	if o == nil || IsNil(o.Os) {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetOsOk() (*string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetOs(v string) {
	o.Os = &v
}

// GetBrowser returns the Browser field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetBrowser() string {
	if o == nil || IsNil(o.Browser) {
		var ret string
		return ret
	}
	return *o.Browser
}

// GetBrowserOk returns a tuple with the Browser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetBrowserOk() (*string, bool) {
	if o == nil || IsNil(o.Browser) {
		return nil, false
	}
	return o.Browser, true
}

// HasBrowser returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasBrowser() bool {
	if o != nil && !IsNil(o.Browser) {
		return true
	}

	return false
}

// SetBrowser gets a reference to the given string and assigns it to the Browser field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetBrowser(v string) {
	o.Browser = &v
}

// GetEmulator returns the Emulator field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetEmulator() bool {
	if o == nil || IsNil(o.Emulator) {
		var ret bool
		return ret
	}
	return *o.Emulator
}

// GetEmulatorOk returns a tuple with the Emulator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetEmulatorOk() (*bool, bool) {
	if o == nil || IsNil(o.Emulator) {
		return nil, false
	}
	return o.Emulator, true
}

// HasEmulator returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasEmulator() bool {
	if o != nil && !IsNil(o.Emulator) {
		return true
	}

	return false
}

// SetEmulator gets a reference to the given bool and assigns it to the Emulator field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetEmulator(v bool) {
	o.Emulator = &v
}

// GetRandomizedDevice returns the RandomizedDevice field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetRandomizedDevice() bool {
	if o == nil || IsNil(o.RandomizedDevice) {
		var ret bool
		return ret
	}
	return *o.RandomizedDevice
}

// GetRandomizedDeviceOk returns a tuple with the RandomizedDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetRandomizedDeviceOk() (*bool, bool) {
	if o == nil || IsNil(o.RandomizedDevice) {
		return nil, false
	}
	return o.RandomizedDevice, true
}

// HasRandomizedDevice returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasRandomizedDevice() bool {
	if o != nil && !IsNil(o.RandomizedDevice) {
		return true
	}

	return false
}

// SetRandomizedDevice gets a reference to the given bool and assigns it to the RandomizedDevice field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetRandomizedDevice(v bool) {
	o.RandomizedDevice = &v
}

// GetFakeNetworkRequest returns the FakeNetworkRequest field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetFakeNetworkRequest() bool {
	if o == nil || IsNil(o.FakeNetworkRequest) {
		var ret bool
		return ret
	}
	return *o.FakeNetworkRequest
}

// GetFakeNetworkRequestOk returns a tuple with the FakeNetworkRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetFakeNetworkRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.FakeNetworkRequest) {
		return nil, false
	}
	return o.FakeNetworkRequest, true
}

// HasFakeNetworkRequest returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasFakeNetworkRequest() bool {
	if o != nil && !IsNil(o.FakeNetworkRequest) {
		return true
	}

	return false
}

// SetFakeNetworkRequest gets a reference to the given bool and assigns it to the FakeNetworkRequest field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetFakeNetworkRequest(v bool) {
	o.FakeNetworkRequest = &v
}

// GetTrueOs returns the TrueOs field value if set, zero value otherwise.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetTrueOs() string {
	if o == nil || IsNil(o.TrueOs) {
		var ret string
		return ret
	}
	return *o.TrueOs
}

// GetTrueOsOk returns a tuple with the TrueOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetTrueOsOk() (*string, bool) {
	if o == nil || IsNil(o.TrueOs) {
		return nil, false
	}
	return o.TrueOs, true
}

// HasTrueOs returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasTrueOs() bool {
	if o != nil && !IsNil(o.TrueOs) {
		return true
	}

	return false
}

// SetTrueOs gets a reference to the given string and assigns it to the TrueOs field.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetTrueOs(v string) {
	o.TrueOs = &v
}

// GetOsAnomaly returns the OsAnomaly field value if set, zero value otherwise.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetOsAnomaly() string {
	if o == nil || IsNil(o.OsAnomaly) {
		var ret string
		return ret
	}
	return *o.OsAnomaly
}

// GetOsAnomalyOk returns a tuple with the OsAnomaly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetOsAnomalyOk() (*string, bool) {
	if o == nil || IsNil(o.OsAnomaly) {
		return nil, false
	}
	return o.OsAnomaly, true
}

// HasOsAnomaly returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasOsAnomaly() bool {
	if o != nil && !IsNil(o.OsAnomaly) {
		return true
	}

	return false
}

// SetOsAnomaly gets a reference to the given string and assigns it to the OsAnomaly field.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetOsAnomaly(v string) {
	o.OsAnomaly = &v
}

// GetRooted returns the Rooted field value if set, zero value otherwise.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetRooted() bool {
	if o == nil || IsNil(o.Rooted) {
		var ret bool
		return ret
	}
	return *o.Rooted
}

// GetRootedOk returns a tuple with the Rooted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetRootedOk() (*bool, bool) {
	if o == nil || IsNil(o.Rooted) {
		return nil, false
	}
	return o.Rooted, true
}

// HasRooted returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasRooted() bool {
	if o != nil && !IsNil(o.Rooted) {
		return true
	}

	return false
}

// SetRooted gets a reference to the given bool and assigns it to the Rooted field.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetRooted(v bool) {
	o.Rooted = &v
}

// GetRemoteSoftware returns the RemoteSoftware field value if set, zero value otherwise.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetRemoteSoftware() bool {
	if o == nil || IsNil(o.RemoteSoftware) {
		var ret bool
		return ret
	}
	return *o.RemoteSoftware
}

// GetRemoteSoftwareOk returns a tuple with the RemoteSoftware field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetRemoteSoftwareOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoteSoftware) {
		return nil, false
	}
	return o.RemoteSoftware, true
}

// HasRemoteSoftware returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasRemoteSoftware() bool {
	if o != nil && !IsNil(o.RemoteSoftware) {
		return true
	}

	return false
}

// SetRemoteSoftware gets a reference to the given bool and assigns it to the RemoteSoftware field.
// Deprecated
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetRemoteSoftware(v bool) {
	o.RemoteSoftware = &v
}

// GetIpReputation returns the IpReputation field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetIpReputation() string {
	if o == nil || IsNil(o.IpReputation) {
		var ret string
		return ret
	}
	return *o.IpReputation
}

// GetIpReputationOk returns a tuple with the IpReputation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetIpReputationOk() (*string, bool) {
	if o == nil || IsNil(o.IpReputation) {
		return nil, false
	}
	return o.IpReputation, true
}

// HasIpReputation returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasIpReputation() bool {
	if o != nil && !IsNil(o.IpReputation) {
		return true
	}

	return false
}

// SetIpReputation gets a reference to the given string and assigns it to the IpReputation field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetIpReputation(v string) {
	o.IpReputation = &v
}

// GetDeviceFingerprintReuse returns the DeviceFingerprintReuse field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetDeviceFingerprintReuse() int32 {
	if o == nil || IsNil(o.DeviceFingerprintReuse) {
		var ret int32
		return ret
	}
	return *o.DeviceFingerprintReuse
}

// GetDeviceFingerprintReuseOk returns a tuple with the DeviceFingerprintReuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetDeviceFingerprintReuseOk() (*int32, bool) {
	if o == nil || IsNil(o.DeviceFingerprintReuse) {
		return nil, false
	}
	return o.DeviceFingerprintReuse, true
}

// HasDeviceFingerprintReuse returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasDeviceFingerprintReuse() bool {
	if o != nil && !IsNil(o.DeviceFingerprintReuse) {
		return true
	}

	return false
}

// SetDeviceFingerprintReuse gets a reference to the given int32 and assigns it to the DeviceFingerprintReuse field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetDeviceFingerprintReuse(v int32) {
	o.DeviceFingerprintReuse = &v
}

// GetSingleDeviceUsed returns the SingleDeviceUsed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetSingleDeviceUsed() bool {
	if o == nil || IsNil(o.SingleDeviceUsed.Get()) {
		var ret bool
		return ret
	}
	return *o.SingleDeviceUsed.Get()
}

// GetSingleDeviceUsedOk returns a tuple with the SingleDeviceUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetSingleDeviceUsedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SingleDeviceUsed.Get(), o.SingleDeviceUsed.IsSet()
}

// HasSingleDeviceUsed returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasSingleDeviceUsed() bool {
	if o != nil && o.SingleDeviceUsed.IsSet() {
		return true
	}

	return false
}

// SetSingleDeviceUsed gets a reference to the given NullableBool and assigns it to the SingleDeviceUsed field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetSingleDeviceUsed(v bool) {
	o.SingleDeviceUsed.Set(&v)
}
// SetSingleDeviceUsedNil sets the value for SingleDeviceUsed to be an explicit nil
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetSingleDeviceUsedNil() {
	o.SingleDeviceUsed.Set(nil)
}

// UnsetSingleDeviceUsed ensures that no value is present for SingleDeviceUsed, not even an explicit nil
func (o *DeviceIntelligenceBreakdownPropertiesDevice) UnsetSingleDeviceUsed() {
	o.SingleDeviceUsed.Unset()
}

// GetDocumentCapture returns the DocumentCapture field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetDocumentCapture() string {
	if o == nil || IsNil(o.DocumentCapture) {
		var ret string
		return ret
	}
	return *o.DocumentCapture
}

// GetDocumentCaptureOk returns a tuple with the DocumentCapture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetDocumentCaptureOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentCapture) {
		return nil, false
	}
	return o.DocumentCapture, true
}

// HasDocumentCapture returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasDocumentCapture() bool {
	if o != nil && !IsNil(o.DocumentCapture) {
		return true
	}

	return false
}

// SetDocumentCapture gets a reference to the given string and assigns it to the DocumentCapture field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetDocumentCapture(v string) {
	o.DocumentCapture = &v
}

// GetBiometricCapture returns the BiometricCapture field value if set, zero value otherwise.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetBiometricCapture() string {
	if o == nil || IsNil(o.BiometricCapture) {
		var ret string
		return ret
	}
	return *o.BiometricCapture
}

// GetBiometricCaptureOk returns a tuple with the BiometricCapture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) GetBiometricCaptureOk() (*string, bool) {
	if o == nil || IsNil(o.BiometricCapture) {
		return nil, false
	}
	return o.BiometricCapture, true
}

// HasBiometricCapture returns a boolean if a field has been set.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) HasBiometricCapture() bool {
	if o != nil && !IsNil(o.BiometricCapture) {
		return true
	}

	return false
}

// SetBiometricCapture gets a reference to the given string and assigns it to the BiometricCapture field.
func (o *DeviceIntelligenceBreakdownPropertiesDevice) SetBiometricCapture(v string) {
	o.BiometricCapture = &v
}

func (o DeviceIntelligenceBreakdownPropertiesDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceIntelligenceBreakdownPropertiesDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SdkVersion) {
		toSerialize["sdk_version"] = o.SdkVersion
	}
	if !IsNil(o.SdkSource) {
		toSerialize["sdk_source"] = o.SdkSource
	}
	if !IsNil(o.AuthenticationType) {
		toSerialize["authentication_type"] = o.AuthenticationType
	}
	if !IsNil(o.RawModel) {
		toSerialize["raw_model"] = o.RawModel
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.Browser) {
		toSerialize["browser"] = o.Browser
	}
	if !IsNil(o.Emulator) {
		toSerialize["emulator"] = o.Emulator
	}
	if !IsNil(o.RandomizedDevice) {
		toSerialize["randomized_device"] = o.RandomizedDevice
	}
	if !IsNil(o.FakeNetworkRequest) {
		toSerialize["fake_network_request"] = o.FakeNetworkRequest
	}
	if !IsNil(o.TrueOs) {
		toSerialize["true_os"] = o.TrueOs
	}
	if !IsNil(o.OsAnomaly) {
		toSerialize["os_anomaly"] = o.OsAnomaly
	}
	if !IsNil(o.Rooted) {
		toSerialize["rooted"] = o.Rooted
	}
	if !IsNil(o.RemoteSoftware) {
		toSerialize["remote_software"] = o.RemoteSoftware
	}
	if !IsNil(o.IpReputation) {
		toSerialize["ip_reputation"] = o.IpReputation
	}
	if !IsNil(o.DeviceFingerprintReuse) {
		toSerialize["device_fingerprint_reuse"] = o.DeviceFingerprintReuse
	}
	if o.SingleDeviceUsed.IsSet() {
		toSerialize["single_device_used"] = o.SingleDeviceUsed.Get()
	}
	if !IsNil(o.DocumentCapture) {
		toSerialize["document_capture"] = o.DocumentCapture
	}
	if !IsNil(o.BiometricCapture) {
		toSerialize["biometric_capture"] = o.BiometricCapture
	}
	return toSerialize, nil
}

type NullableDeviceIntelligenceBreakdownPropertiesDevice struct {
	value *DeviceIntelligenceBreakdownPropertiesDevice
	isSet bool
}

func (v NullableDeviceIntelligenceBreakdownPropertiesDevice) Get() *DeviceIntelligenceBreakdownPropertiesDevice {
	return v.value
}

func (v *NullableDeviceIntelligenceBreakdownPropertiesDevice) Set(val *DeviceIntelligenceBreakdownPropertiesDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceIntelligenceBreakdownPropertiesDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceIntelligenceBreakdownPropertiesDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceIntelligenceBreakdownPropertiesDevice(val *DeviceIntelligenceBreakdownPropertiesDevice) *NullableDeviceIntelligenceBreakdownPropertiesDevice {
	return &NullableDeviceIntelligenceBreakdownPropertiesDevice{value: val, isSet: true}
}

func (v NullableDeviceIntelligenceBreakdownPropertiesDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceIntelligenceBreakdownPropertiesDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


