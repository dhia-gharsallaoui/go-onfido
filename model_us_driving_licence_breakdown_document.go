/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UsDrivingLicenceBreakdownDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsDrivingLicenceBreakdownDocument{}

// UsDrivingLicenceBreakdownDocument Asserts whether the document data provided matches a real driving license in the DMV driver's license database.
type UsDrivingLicenceBreakdownDocument struct {
	Result *string `json:"result,omitempty"`
	Breakdown *UsDrivingLicenceBreakdownDocumentBreakdown `json:"breakdown,omitempty"`
}

// NewUsDrivingLicenceBreakdownDocument instantiates a new UsDrivingLicenceBreakdownDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsDrivingLicenceBreakdownDocument() *UsDrivingLicenceBreakdownDocument {
	this := UsDrivingLicenceBreakdownDocument{}
	return &this
}

// NewUsDrivingLicenceBreakdownDocumentWithDefaults instantiates a new UsDrivingLicenceBreakdownDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsDrivingLicenceBreakdownDocumentWithDefaults() *UsDrivingLicenceBreakdownDocument {
	this := UsDrivingLicenceBreakdownDocument{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UsDrivingLicenceBreakdownDocument) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsDrivingLicenceBreakdownDocument) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UsDrivingLicenceBreakdownDocument) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *UsDrivingLicenceBreakdownDocument) SetResult(v string) {
	o.Result = &v
}

// GetBreakdown returns the Breakdown field value if set, zero value otherwise.
func (o *UsDrivingLicenceBreakdownDocument) GetBreakdown() UsDrivingLicenceBreakdownDocumentBreakdown {
	if o == nil || IsNil(o.Breakdown) {
		var ret UsDrivingLicenceBreakdownDocumentBreakdown
		return ret
	}
	return *o.Breakdown
}

// GetBreakdownOk returns a tuple with the Breakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsDrivingLicenceBreakdownDocument) GetBreakdownOk() (*UsDrivingLicenceBreakdownDocumentBreakdown, bool) {
	if o == nil || IsNil(o.Breakdown) {
		return nil, false
	}
	return o.Breakdown, true
}

// HasBreakdown returns a boolean if a field has been set.
func (o *UsDrivingLicenceBreakdownDocument) HasBreakdown() bool {
	if o != nil && !IsNil(o.Breakdown) {
		return true
	}

	return false
}

// SetBreakdown gets a reference to the given UsDrivingLicenceBreakdownDocumentBreakdown and assigns it to the Breakdown field.
func (o *UsDrivingLicenceBreakdownDocument) SetBreakdown(v UsDrivingLicenceBreakdownDocumentBreakdown) {
	o.Breakdown = &v
}

func (o UsDrivingLicenceBreakdownDocument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsDrivingLicenceBreakdownDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Breakdown) {
		toSerialize["breakdown"] = o.Breakdown
	}
	return toSerialize, nil
}

type NullableUsDrivingLicenceBreakdownDocument struct {
	value *UsDrivingLicenceBreakdownDocument
	isSet bool
}

func (v NullableUsDrivingLicenceBreakdownDocument) Get() *UsDrivingLicenceBreakdownDocument {
	return v.value
}

func (v *NullableUsDrivingLicenceBreakdownDocument) Set(val *UsDrivingLicenceBreakdownDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableUsDrivingLicenceBreakdownDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableUsDrivingLicenceBreakdownDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsDrivingLicenceBreakdownDocument(val *UsDrivingLicenceBreakdownDocument) *NullableUsDrivingLicenceBreakdownDocument {
	return &NullableUsDrivingLicenceBreakdownDocument{value: val, isSet: true}
}

func (v NullableUsDrivingLicenceBreakdownDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsDrivingLicenceBreakdownDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


