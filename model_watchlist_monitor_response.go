/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the WatchlistMonitorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchlistMonitorResponse{}

// WatchlistMonitorResponse struct for WatchlistMonitorResponse
type WatchlistMonitorResponse struct {
	// The unique identifier for the monitor.
	Id string `json:"id"`
	// The date and time at which the monitor was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The date and time at which the monitor was deleted. If the monitor is still active, this field will be null.
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	// Indicates whether the object was created in the sandbox or not.
	IsSandbox *bool `json:"is_sandbox,omitempty"`
}

type _WatchlistMonitorResponse WatchlistMonitorResponse

// NewWatchlistMonitorResponse instantiates a new WatchlistMonitorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchlistMonitorResponse(id string) *WatchlistMonitorResponse {
	this := WatchlistMonitorResponse{}
	this.Id = id
	var isSandbox bool = false
	this.IsSandbox = &isSandbox
	return &this
}

// NewWatchlistMonitorResponseWithDefaults instantiates a new WatchlistMonitorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchlistMonitorResponseWithDefaults() *WatchlistMonitorResponse {
	this := WatchlistMonitorResponse{}
	var isSandbox bool = false
	this.IsSandbox = &isSandbox
	return &this
}

// GetId returns the Id field value
func (o *WatchlistMonitorResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WatchlistMonitorResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WatchlistMonitorResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WatchlistMonitorResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistMonitorResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WatchlistMonitorResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *WatchlistMonitorResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *WatchlistMonitorResponse) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistMonitorResponse) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *WatchlistMonitorResponse) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *WatchlistMonitorResponse) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetIsSandbox returns the IsSandbox field value if set, zero value otherwise.
func (o *WatchlistMonitorResponse) GetIsSandbox() bool {
	if o == nil || IsNil(o.IsSandbox) {
		var ret bool
		return ret
	}
	return *o.IsSandbox
}

// GetIsSandboxOk returns a tuple with the IsSandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistMonitorResponse) GetIsSandboxOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSandbox) {
		return nil, false
	}
	return o.IsSandbox, true
}

// HasIsSandbox returns a boolean if a field has been set.
func (o *WatchlistMonitorResponse) HasIsSandbox() bool {
	if o != nil && !IsNil(o.IsSandbox) {
		return true
	}

	return false
}

// SetIsSandbox gets a reference to the given bool and assigns it to the IsSandbox field.
func (o *WatchlistMonitorResponse) SetIsSandbox(v bool) {
	o.IsSandbox = &v
}

func (o WatchlistMonitorResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchlistMonitorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.IsSandbox) {
		toSerialize["is_sandbox"] = o.IsSandbox
	}
	return toSerialize, nil
}

func (o *WatchlistMonitorResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWatchlistMonitorResponse := _WatchlistMonitorResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWatchlistMonitorResponse)

	if err != nil {
		return err
	}

	*o = WatchlistMonitorResponse(varWatchlistMonitorResponse)

	return err
}

type NullableWatchlistMonitorResponse struct {
	value *WatchlistMonitorResponse
	isSet bool
}

func (v NullableWatchlistMonitorResponse) Get() *WatchlistMonitorResponse {
	return v.value
}

func (v *NullableWatchlistMonitorResponse) Set(val *WatchlistMonitorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchlistMonitorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchlistMonitorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchlistMonitorResponse(val *WatchlistMonitorResponse) *NullableWatchlistMonitorResponse {
	return &NullableWatchlistMonitorResponse{value: val, isSet: true}
}

func (v NullableWatchlistMonitorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchlistMonitorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


