/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApplicantUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicantUpdate{}

// ApplicantUpdate struct for ApplicantUpdate
type ApplicantUpdate struct {
	// The applicant's first name
	FirstName *string `json:"first_name,omitempty" validate:"regexp=^[^!#$%*=<>;{}\\"]*$"`
	// The applicant's surname
	LastName *string `json:"last_name,omitempty" validate:"regexp=^[^!#$%*=<>;{}\\"]*$"`
}

// NewApplicantUpdate instantiates a new ApplicantUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicantUpdate() *ApplicantUpdate {
	this := ApplicantUpdate{}
	return &this
}

// NewApplicantUpdateWithDefaults instantiates a new ApplicantUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicantUpdateWithDefaults() *ApplicantUpdate {
	this := ApplicantUpdate{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ApplicantUpdate) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdate) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ApplicantUpdate) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ApplicantUpdate) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ApplicantUpdate) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicantUpdate) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ApplicantUpdate) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ApplicantUpdate) SetLastName(v string) {
	o.LastName = &v
}

func (o ApplicantUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicantUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	return toSerialize, nil
}

type NullableApplicantUpdate struct {
	value *ApplicantUpdate
	isSet bool
}

func (v NullableApplicantUpdate) Get() *ApplicantUpdate {
	return v.value
}

func (v *NullableApplicantUpdate) Set(val *ApplicantUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicantUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicantUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicantUpdate(val *ApplicantUpdate) *NullableApplicantUpdate {
	return &NullableApplicantUpdate{value: val, isSet: true}
}

func (v NullableApplicantUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicantUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


