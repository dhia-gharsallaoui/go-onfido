/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UsDrivingLicenceBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsDrivingLicenceBreakdown{}

// UsDrivingLicenceBreakdown struct for UsDrivingLicenceBreakdown
type UsDrivingLicenceBreakdown struct {
	Document *UsDrivingLicenceBreakdownDocument `json:"document,omitempty"`
	Address *UsDrivingLicenceBreakdownAddress `json:"address,omitempty"`
	Personal *UsDrivingLicenceBreakdownPersonal `json:"personal,omitempty"`
}

// NewUsDrivingLicenceBreakdown instantiates a new UsDrivingLicenceBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsDrivingLicenceBreakdown() *UsDrivingLicenceBreakdown {
	this := UsDrivingLicenceBreakdown{}
	return &this
}

// NewUsDrivingLicenceBreakdownWithDefaults instantiates a new UsDrivingLicenceBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsDrivingLicenceBreakdownWithDefaults() *UsDrivingLicenceBreakdown {
	this := UsDrivingLicenceBreakdown{}
	return &this
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *UsDrivingLicenceBreakdown) GetDocument() UsDrivingLicenceBreakdownDocument {
	if o == nil || IsNil(o.Document) {
		var ret UsDrivingLicenceBreakdownDocument
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsDrivingLicenceBreakdown) GetDocumentOk() (*UsDrivingLicenceBreakdownDocument, bool) {
	if o == nil || IsNil(o.Document) {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *UsDrivingLicenceBreakdown) HasDocument() bool {
	if o != nil && !IsNil(o.Document) {
		return true
	}

	return false
}

// SetDocument gets a reference to the given UsDrivingLicenceBreakdownDocument and assigns it to the Document field.
func (o *UsDrivingLicenceBreakdown) SetDocument(v UsDrivingLicenceBreakdownDocument) {
	o.Document = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *UsDrivingLicenceBreakdown) GetAddress() UsDrivingLicenceBreakdownAddress {
	if o == nil || IsNil(o.Address) {
		var ret UsDrivingLicenceBreakdownAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsDrivingLicenceBreakdown) GetAddressOk() (*UsDrivingLicenceBreakdownAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *UsDrivingLicenceBreakdown) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given UsDrivingLicenceBreakdownAddress and assigns it to the Address field.
func (o *UsDrivingLicenceBreakdown) SetAddress(v UsDrivingLicenceBreakdownAddress) {
	o.Address = &v
}

// GetPersonal returns the Personal field value if set, zero value otherwise.
func (o *UsDrivingLicenceBreakdown) GetPersonal() UsDrivingLicenceBreakdownPersonal {
	if o == nil || IsNil(o.Personal) {
		var ret UsDrivingLicenceBreakdownPersonal
		return ret
	}
	return *o.Personal
}

// GetPersonalOk returns a tuple with the Personal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsDrivingLicenceBreakdown) GetPersonalOk() (*UsDrivingLicenceBreakdownPersonal, bool) {
	if o == nil || IsNil(o.Personal) {
		return nil, false
	}
	return o.Personal, true
}

// HasPersonal returns a boolean if a field has been set.
func (o *UsDrivingLicenceBreakdown) HasPersonal() bool {
	if o != nil && !IsNil(o.Personal) {
		return true
	}

	return false
}

// SetPersonal gets a reference to the given UsDrivingLicenceBreakdownPersonal and assigns it to the Personal field.
func (o *UsDrivingLicenceBreakdown) SetPersonal(v UsDrivingLicenceBreakdownPersonal) {
	o.Personal = &v
}

func (o UsDrivingLicenceBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsDrivingLicenceBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Document) {
		toSerialize["document"] = o.Document
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Personal) {
		toSerialize["personal"] = o.Personal
	}
	return toSerialize, nil
}

type NullableUsDrivingLicenceBreakdown struct {
	value *UsDrivingLicenceBreakdown
	isSet bool
}

func (v NullableUsDrivingLicenceBreakdown) Get() *UsDrivingLicenceBreakdown {
	return v.value
}

func (v *NullableUsDrivingLicenceBreakdown) Set(val *UsDrivingLicenceBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableUsDrivingLicenceBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableUsDrivingLicenceBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsDrivingLicenceBreakdown(val *UsDrivingLicenceBreakdown) *NullableUsDrivingLicenceBreakdown {
	return &NullableUsDrivingLicenceBreakdown{value: val, isSet: true}
}

func (v NullableUsDrivingLicenceBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsDrivingLicenceBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


