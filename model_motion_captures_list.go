/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MotionCapturesList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MotionCapturesList{}

// MotionCapturesList struct for MotionCapturesList
type MotionCapturesList struct {
	MotionCaptures []MotionCapture `json:"motion_captures"`
}

type _MotionCapturesList MotionCapturesList

// NewMotionCapturesList instantiates a new MotionCapturesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMotionCapturesList(motionCaptures []MotionCapture) *MotionCapturesList {
	this := MotionCapturesList{}
	this.MotionCaptures = motionCaptures
	return &this
}

// NewMotionCapturesListWithDefaults instantiates a new MotionCapturesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMotionCapturesListWithDefaults() *MotionCapturesList {
	this := MotionCapturesList{}
	return &this
}

// GetMotionCaptures returns the MotionCaptures field value
func (o *MotionCapturesList) GetMotionCaptures() []MotionCapture {
	if o == nil {
		var ret []MotionCapture
		return ret
	}

	return o.MotionCaptures
}

// GetMotionCapturesOk returns a tuple with the MotionCaptures field value
// and a boolean to check if the value has been set.
func (o *MotionCapturesList) GetMotionCapturesOk() ([]MotionCapture, bool) {
	if o == nil {
		return nil, false
	}
	return o.MotionCaptures, true
}

// SetMotionCaptures sets field value
func (o *MotionCapturesList) SetMotionCaptures(v []MotionCapture) {
	o.MotionCaptures = v
}

func (o MotionCapturesList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MotionCapturesList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["motion_captures"] = o.MotionCaptures
	return toSerialize, nil
}

func (o *MotionCapturesList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"motion_captures",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMotionCapturesList := _MotionCapturesList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMotionCapturesList)

	if err != nil {
		return err
	}

	*o = MotionCapturesList(varMotionCapturesList)

	return err
}

type NullableMotionCapturesList struct {
	value *MotionCapturesList
	isSet bool
}

func (v NullableMotionCapturesList) Get() *MotionCapturesList {
	return v.value
}

func (v *NullableMotionCapturesList) Set(val *MotionCapturesList) {
	v.value = val
	v.isSet = true
}

func (v NullableMotionCapturesList) IsSet() bool {
	return v.isSet
}

func (v *NullableMotionCapturesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMotionCapturesList(val *MotionCapturesList) *NullableMotionCapturesList {
	return &NullableMotionCapturesList{value: val, isSet: true}
}

func (v NullableMotionCapturesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMotionCapturesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


