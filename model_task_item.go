/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TaskItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskItem{}

// TaskItem struct for TaskItem
type TaskItem struct {
	// The identifier for the Task.
	Id *string `json:"id,omitempty" validate:"regexp=^[0-9a-z_-]+$"`
	// The identifier for the Task Definition.
	TaskDefId *string `json:"task_def_id,omitempty" validate:"regexp=^[0-9a-z_-]+$"`
	// The date and time when the Task was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The date and time when the Task was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewTaskItem instantiates a new TaskItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskItem() *TaskItem {
	this := TaskItem{}
	return &this
}

// NewTaskItemWithDefaults instantiates a new TaskItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskItemWithDefaults() *TaskItem {
	this := TaskItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaskItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaskItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TaskItem) SetId(v string) {
	o.Id = &v
}

// GetTaskDefId returns the TaskDefId field value if set, zero value otherwise.
func (o *TaskItem) GetTaskDefId() string {
	if o == nil || IsNil(o.TaskDefId) {
		var ret string
		return ret
	}
	return *o.TaskDefId
}

// GetTaskDefIdOk returns a tuple with the TaskDefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItem) GetTaskDefIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskDefId) {
		return nil, false
	}
	return o.TaskDefId, true
}

// HasTaskDefId returns a boolean if a field has been set.
func (o *TaskItem) HasTaskDefId() bool {
	if o != nil && !IsNil(o.TaskDefId) {
		return true
	}

	return false
}

// SetTaskDefId gets a reference to the given string and assigns it to the TaskDefId field.
func (o *TaskItem) SetTaskDefId(v string) {
	o.TaskDefId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TaskItem) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TaskItem) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *TaskItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TaskItem) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItem) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TaskItem) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *TaskItem) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o TaskItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TaskDefId) {
		toSerialize["task_def_id"] = o.TaskDefId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableTaskItem struct {
	value *TaskItem
	isSet bool
}

func (v NullableTaskItem) Get() *TaskItem {
	return v.value
}

func (v *NullableTaskItem) Set(val *TaskItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskItem(val *TaskItem) *NullableTaskItem {
	return &NullableTaskItem{value: val, isSet: true}
}

func (v NullableTaskItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


