/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle{}

// DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle Normalised data for passenger cars
type DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle struct {
	// Whether they are qualified for a passenger car, such as a “B” class in the UK
	IsQualified *bool `json:"is_qualified,omitempty"`
	// Date the class qualification was obtained
	ObtainmentDate *string `json:"obtainment_date,omitempty"`
	// Date the class qualification expires, which may be different to doc expiry
	ExpiryDate *string `json:"expiry_date,omitempty"`
}

// NewDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle instantiates a new DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle() *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle {
	this := DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle{}
	return &this
}

// NewDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicleWithDefaults instantiates a new DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicleWithDefaults() *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle {
	this := DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle{}
	return &this
}

// GetIsQualified returns the IsQualified field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) GetIsQualified() bool {
	if o == nil || IsNil(o.IsQualified) {
		var ret bool
		return ret
	}
	return *o.IsQualified
}

// GetIsQualifiedOk returns a tuple with the IsQualified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) GetIsQualifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsQualified) {
		return nil, false
	}
	return o.IsQualified, true
}

// HasIsQualified returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) HasIsQualified() bool {
	if o != nil && !IsNil(o.IsQualified) {
		return true
	}

	return false
}

// SetIsQualified gets a reference to the given bool and assigns it to the IsQualified field.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) SetIsQualified(v bool) {
	o.IsQualified = &v
}

// GetObtainmentDate returns the ObtainmentDate field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) GetObtainmentDate() string {
	if o == nil || IsNil(o.ObtainmentDate) {
		var ret string
		return ret
	}
	return *o.ObtainmentDate
}

// GetObtainmentDateOk returns a tuple with the ObtainmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) GetObtainmentDateOk() (*string, bool) {
	if o == nil || IsNil(o.ObtainmentDate) {
		return nil, false
	}
	return o.ObtainmentDate, true
}

// HasObtainmentDate returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) HasObtainmentDate() bool {
	if o != nil && !IsNil(o.ObtainmentDate) {
		return true
	}

	return false
}

// SetObtainmentDate gets a reference to the given string and assigns it to the ObtainmentDate field.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) SetObtainmentDate(v string) {
	o.ObtainmentDate = &v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) GetExpiryDate() string {
	if o == nil || IsNil(o.ExpiryDate) {
		var ret string
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) GetExpiryDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiryDate) {
		return nil, false
	}
	return o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) HasExpiryDate() bool {
	if o != nil && !IsNil(o.ExpiryDate) {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given string and assigns it to the ExpiryDate field.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) SetExpiryDate(v string) {
	o.ExpiryDate = &v
}

func (o DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsQualified) {
		toSerialize["is_qualified"] = o.IsQualified
	}
	if !IsNil(o.ObtainmentDate) {
		toSerialize["obtainment_date"] = o.ObtainmentDate
	}
	if !IsNil(o.ExpiryDate) {
		toSerialize["expiry_date"] = o.ExpiryDate
	}
	return toSerialize, nil
}

type NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle struct {
	value *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle
	isSet bool
}

func (v NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) Get() *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle {
	return v.value
}

func (v *NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) Set(val *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle(val *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) *NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle {
	return &NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle{value: val, isSet: true}
}

func (v NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


