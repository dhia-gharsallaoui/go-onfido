/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WatchlistMonitorMatchesList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchlistMonitorMatchesList{}

// WatchlistMonitorMatchesList struct for WatchlistMonitorMatchesList
type WatchlistMonitorMatchesList struct {
	Matches []WatchlistMonitorMatch `json:"matches"`
}

type _WatchlistMonitorMatchesList WatchlistMonitorMatchesList

// NewWatchlistMonitorMatchesList instantiates a new WatchlistMonitorMatchesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchlistMonitorMatchesList(matches []WatchlistMonitorMatch) *WatchlistMonitorMatchesList {
	this := WatchlistMonitorMatchesList{}
	this.Matches = matches
	return &this
}

// NewWatchlistMonitorMatchesListWithDefaults instantiates a new WatchlistMonitorMatchesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchlistMonitorMatchesListWithDefaults() *WatchlistMonitorMatchesList {
	this := WatchlistMonitorMatchesList{}
	return &this
}

// GetMatches returns the Matches field value
func (o *WatchlistMonitorMatchesList) GetMatches() []WatchlistMonitorMatch {
	if o == nil {
		var ret []WatchlistMonitorMatch
		return ret
	}

	return o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value
// and a boolean to check if the value has been set.
func (o *WatchlistMonitorMatchesList) GetMatchesOk() ([]WatchlistMonitorMatch, bool) {
	if o == nil {
		return nil, false
	}
	return o.Matches, true
}

// SetMatches sets field value
func (o *WatchlistMonitorMatchesList) SetMatches(v []WatchlistMonitorMatch) {
	o.Matches = v
}

func (o WatchlistMonitorMatchesList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchlistMonitorMatchesList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["matches"] = o.Matches
	return toSerialize, nil
}

func (o *WatchlistMonitorMatchesList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"matches",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWatchlistMonitorMatchesList := _WatchlistMonitorMatchesList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWatchlistMonitorMatchesList)

	if err != nil {
		return err
	}

	*o = WatchlistMonitorMatchesList(varWatchlistMonitorMatchesList)

	return err
}

type NullableWatchlistMonitorMatchesList struct {
	value *WatchlistMonitorMatchesList
	isSet bool
}

func (v NullableWatchlistMonitorMatchesList) Get() *WatchlistMonitorMatchesList {
	return v.value
}

func (v *NullableWatchlistMonitorMatchesList) Set(val *WatchlistMonitorMatchesList) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchlistMonitorMatchesList) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchlistMonitorMatchesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchlistMonitorMatchesList(val *WatchlistMonitorMatchesList) *NullableWatchlistMonitorMatchesList {
	return &NullableWatchlistMonitorMatchesList{value: val, isSet: true}
}

func (v NullableWatchlistMonitorMatchesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchlistMonitorMatchesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


