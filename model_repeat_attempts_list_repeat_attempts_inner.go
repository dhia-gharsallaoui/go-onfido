/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the RepeatAttemptsListRepeatAttemptsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepeatAttemptsListRepeatAttemptsInner{}

// RepeatAttemptsListRepeatAttemptsInner struct for RepeatAttemptsListRepeatAttemptsInner
type RepeatAttemptsListRepeatAttemptsInner struct {
	// The unique identifier of the matching Document report.
	ReportId *string `json:"report_id,omitempty"`
	// The unique identifier of the applicant for the matching Document report.
	ApplicantId *string `json:"applicant_id,omitempty"`
	// Whether the dates of birth are exactly the same or are different.
	DateOfBirth *string `json:"date_of_birth,omitempty"`
	// Whether the names are exactly the same or are different.
	Names *string `json:"names,omitempty"`
	// The report result of this attempt.
	Result *string `json:"result,omitempty"`
	// When the matching report was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// When the matching report was completed.
	CompletedAt *time.Time `json:"completed_at,omitempty"`
}

// NewRepeatAttemptsListRepeatAttemptsInner instantiates a new RepeatAttemptsListRepeatAttemptsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepeatAttemptsListRepeatAttemptsInner() *RepeatAttemptsListRepeatAttemptsInner {
	this := RepeatAttemptsListRepeatAttemptsInner{}
	return &this
}

// NewRepeatAttemptsListRepeatAttemptsInnerWithDefaults instantiates a new RepeatAttemptsListRepeatAttemptsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepeatAttemptsListRepeatAttemptsInnerWithDefaults() *RepeatAttemptsListRepeatAttemptsInner {
	this := RepeatAttemptsListRepeatAttemptsInner{}
	return &this
}

// GetReportId returns the ReportId field value if set, zero value otherwise.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetReportId() string {
	if o == nil || IsNil(o.ReportId) {
		var ret string
		return ret
	}
	return *o.ReportId
}

// GetReportIdOk returns a tuple with the ReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetReportIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReportId) {
		return nil, false
	}
	return o.ReportId, true
}

// HasReportId returns a boolean if a field has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) HasReportId() bool {
	if o != nil && !IsNil(o.ReportId) {
		return true
	}

	return false
}

// SetReportId gets a reference to the given string and assigns it to the ReportId field.
func (o *RepeatAttemptsListRepeatAttemptsInner) SetReportId(v string) {
	o.ReportId = &v
}

// GetApplicantId returns the ApplicantId field value if set, zero value otherwise.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetApplicantId() string {
	if o == nil || IsNil(o.ApplicantId) {
		var ret string
		return ret
	}
	return *o.ApplicantId
}

// GetApplicantIdOk returns a tuple with the ApplicantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetApplicantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicantId) {
		return nil, false
	}
	return o.ApplicantId, true
}

// HasApplicantId returns a boolean if a field has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) HasApplicantId() bool {
	if o != nil && !IsNil(o.ApplicantId) {
		return true
	}

	return false
}

// SetApplicantId gets a reference to the given string and assigns it to the ApplicantId field.
func (o *RepeatAttemptsListRepeatAttemptsInner) SetApplicantId(v string) {
	o.ApplicantId = &v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetDateOfBirth() string {
	if o == nil || IsNil(o.DateOfBirth) {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetDateOfBirthOk() (*string, bool) {
	if o == nil || IsNil(o.DateOfBirth) {
		return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) HasDateOfBirth() bool {
	if o != nil && !IsNil(o.DateOfBirth) {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *RepeatAttemptsListRepeatAttemptsInner) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetNames() string {
	if o == nil || IsNil(o.Names) {
		var ret string
		return ret
	}
	return *o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetNamesOk() (*string, bool) {
	if o == nil || IsNil(o.Names) {
		return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) HasNames() bool {
	if o != nil && !IsNil(o.Names) {
		return true
	}

	return false
}

// SetNames gets a reference to the given string and assigns it to the Names field.
func (o *RepeatAttemptsListRepeatAttemptsInner) SetNames(v string) {
	o.Names = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *RepeatAttemptsListRepeatAttemptsInner) SetResult(v string) {
	o.Result = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *RepeatAttemptsListRepeatAttemptsInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetCompletedAt() time.Time {
	if o == nil || IsNil(o.CompletedAt) {
		var ret time.Time
		return ret
	}
	return *o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompletedAt) {
		return nil, false
	}
	return o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *RepeatAttemptsListRepeatAttemptsInner) HasCompletedAt() bool {
	if o != nil && !IsNil(o.CompletedAt) {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given time.Time and assigns it to the CompletedAt field.
func (o *RepeatAttemptsListRepeatAttemptsInner) SetCompletedAt(v time.Time) {
	o.CompletedAt = &v
}

func (o RepeatAttemptsListRepeatAttemptsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepeatAttemptsListRepeatAttemptsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportId) {
		toSerialize["report_id"] = o.ReportId
	}
	if !IsNil(o.ApplicantId) {
		toSerialize["applicant_id"] = o.ApplicantId
	}
	if !IsNil(o.DateOfBirth) {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if !IsNil(o.Names) {
		toSerialize["names"] = o.Names
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CompletedAt) {
		toSerialize["completed_at"] = o.CompletedAt
	}
	return toSerialize, nil
}

type NullableRepeatAttemptsListRepeatAttemptsInner struct {
	value *RepeatAttemptsListRepeatAttemptsInner
	isSet bool
}

func (v NullableRepeatAttemptsListRepeatAttemptsInner) Get() *RepeatAttemptsListRepeatAttemptsInner {
	return v.value
}

func (v *NullableRepeatAttemptsListRepeatAttemptsInner) Set(val *RepeatAttemptsListRepeatAttemptsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRepeatAttemptsListRepeatAttemptsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRepeatAttemptsListRepeatAttemptsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepeatAttemptsListRepeatAttemptsInner(val *RepeatAttemptsListRepeatAttemptsInner) *NullableRepeatAttemptsListRepeatAttemptsInner {
	return &NullableRepeatAttemptsListRepeatAttemptsInner{value: val, isSet: true}
}

func (v NullableRepeatAttemptsListRepeatAttemptsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepeatAttemptsListRepeatAttemptsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


