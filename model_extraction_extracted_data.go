/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExtractionExtractedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtractionExtractedData{}

// ExtractionExtractedData struct for ExtractionExtractedData
type ExtractionExtractedData struct {
	// The official document number.
	DocumentNumber *string `json:"document_number,omitempty"`
	// First name.
	FirstName *string `json:"first_name,omitempty"`
	// Last name.
	LastName *string `json:"last_name,omitempty"`
	// Full name.
	FullName *string `json:"full_name,omitempty"`
	// Spouse name (French documents only).
	SpouseName *string `json:"spouse_name,omitempty"`
	// Widow name (French documents only).
	WidowName *string `json:"widow_name,omitempty"`
	// Alias name (French documents only).
	AliasName *string `json:"alias_name,omitempty"`
	// Gender (Valid values are Male and Female).
	Gender *string `json:"gender,omitempty"`
	// Date of birth in YYYY-MM-DD format.
	DateOfBirth *string `json:"date_of_birth,omitempty"`
	// Date of expiry in YYYY-MM-DD format.
	DateOfExpiry *string `json:"date_of_expiry,omitempty"`
	// Date of expiry in YYYY-MM-DD format.
	ExpiryDate *string `json:"expiry_date,omitempty"`
	// Nationality in 3-letter ISO code.
	Nationality *string `json:"nationality,omitempty" validate:"regexp=^[A-Z]{3}$"`
	// Line 1 of the MRZ code.
	MrzLine1 *string `json:"mrz_line_1,omitempty"`
	// Line 2 of the MRZ code.
	MrzLine2 *string `json:"mrz_line_2,omitempty"`
	// Line 3 of the MRZ code.
	MrzLine3 *string `json:"mrz_line_3,omitempty"`
	// Line 1 of the address.
	Address1 *string `json:"address_1,omitempty"`
	// Line 2 of the address.
	Address2 *string `json:"address_2,omitempty"`
	// Line 3 of the address.
	Address3 *string `json:"address_3,omitempty"`
	// Line 4 of the address.
	Address4 *string `json:"address_4,omitempty"`
	// Line 5 of the address.
	Address5 *string `json:"address_5,omitempty"`
	// Issuing authority.
	IssuingAuthority *string `json:"issuing_authority,omitempty"`
	// Document country in 3-letter ISO code.
	IssuingCountry *CountryCodes `json:"issuing_country,omitempty"`
	// Type of document.
	DocumentType *DocumentTypes `json:"document_type,omitempty"`
	// Place of birth.
	PlaceOfBirth *string `json:"place_of_birth,omitempty"`
	// The state that issued the document.
	IssuingState *string `json:"issuing_state,omitempty"`
	// Issuing date in YYYY-MM-DD format.
	IssuingDate *string `json:"issuing_date,omitempty"`
	// The owner's unique identification number.
	PersonalNumber *string `json:"personal_number,omitempty"`
}

// NewExtractionExtractedData instantiates a new ExtractionExtractedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtractionExtractedData() *ExtractionExtractedData {
	this := ExtractionExtractedData{}
	return &this
}

// NewExtractionExtractedDataWithDefaults instantiates a new ExtractionExtractedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtractionExtractedDataWithDefaults() *ExtractionExtractedData {
	this := ExtractionExtractedData{}
	return &this
}

// GetDocumentNumber returns the DocumentNumber field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetDocumentNumber() string {
	if o == nil || IsNil(o.DocumentNumber) {
		var ret string
		return ret
	}
	return *o.DocumentNumber
}

// GetDocumentNumberOk returns a tuple with the DocumentNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetDocumentNumberOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentNumber) {
		return nil, false
	}
	return o.DocumentNumber, true
}

// HasDocumentNumber returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasDocumentNumber() bool {
	if o != nil && !IsNil(o.DocumentNumber) {
		return true
	}

	return false
}

// SetDocumentNumber gets a reference to the given string and assigns it to the DocumentNumber field.
func (o *ExtractionExtractedData) SetDocumentNumber(v string) {
	o.DocumentNumber = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ExtractionExtractedData) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ExtractionExtractedData) SetLastName(v string) {
	o.LastName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *ExtractionExtractedData) SetFullName(v string) {
	o.FullName = &v
}

// GetSpouseName returns the SpouseName field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetSpouseName() string {
	if o == nil || IsNil(o.SpouseName) {
		var ret string
		return ret
	}
	return *o.SpouseName
}

// GetSpouseNameOk returns a tuple with the SpouseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetSpouseNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpouseName) {
		return nil, false
	}
	return o.SpouseName, true
}

// HasSpouseName returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasSpouseName() bool {
	if o != nil && !IsNil(o.SpouseName) {
		return true
	}

	return false
}

// SetSpouseName gets a reference to the given string and assigns it to the SpouseName field.
func (o *ExtractionExtractedData) SetSpouseName(v string) {
	o.SpouseName = &v
}

// GetWidowName returns the WidowName field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetWidowName() string {
	if o == nil || IsNil(o.WidowName) {
		var ret string
		return ret
	}
	return *o.WidowName
}

// GetWidowNameOk returns a tuple with the WidowName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetWidowNameOk() (*string, bool) {
	if o == nil || IsNil(o.WidowName) {
		return nil, false
	}
	return o.WidowName, true
}

// HasWidowName returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasWidowName() bool {
	if o != nil && !IsNil(o.WidowName) {
		return true
	}

	return false
}

// SetWidowName gets a reference to the given string and assigns it to the WidowName field.
func (o *ExtractionExtractedData) SetWidowName(v string) {
	o.WidowName = &v
}

// GetAliasName returns the AliasName field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetAliasName() string {
	if o == nil || IsNil(o.AliasName) {
		var ret string
		return ret
	}
	return *o.AliasName
}

// GetAliasNameOk returns a tuple with the AliasName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetAliasNameOk() (*string, bool) {
	if o == nil || IsNil(o.AliasName) {
		return nil, false
	}
	return o.AliasName, true
}

// HasAliasName returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasAliasName() bool {
	if o != nil && !IsNil(o.AliasName) {
		return true
	}

	return false
}

// SetAliasName gets a reference to the given string and assigns it to the AliasName field.
func (o *ExtractionExtractedData) SetAliasName(v string) {
	o.AliasName = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *ExtractionExtractedData) SetGender(v string) {
	o.Gender = &v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetDateOfBirth() string {
	if o == nil || IsNil(o.DateOfBirth) {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetDateOfBirthOk() (*string, bool) {
	if o == nil || IsNil(o.DateOfBirth) {
		return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasDateOfBirth() bool {
	if o != nil && !IsNil(o.DateOfBirth) {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *ExtractionExtractedData) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetDateOfExpiry returns the DateOfExpiry field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetDateOfExpiry() string {
	if o == nil || IsNil(o.DateOfExpiry) {
		var ret string
		return ret
	}
	return *o.DateOfExpiry
}

// GetDateOfExpiryOk returns a tuple with the DateOfExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetDateOfExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.DateOfExpiry) {
		return nil, false
	}
	return o.DateOfExpiry, true
}

// HasDateOfExpiry returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasDateOfExpiry() bool {
	if o != nil && !IsNil(o.DateOfExpiry) {
		return true
	}

	return false
}

// SetDateOfExpiry gets a reference to the given string and assigns it to the DateOfExpiry field.
func (o *ExtractionExtractedData) SetDateOfExpiry(v string) {
	o.DateOfExpiry = &v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetExpiryDate() string {
	if o == nil || IsNil(o.ExpiryDate) {
		var ret string
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetExpiryDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiryDate) {
		return nil, false
	}
	return o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasExpiryDate() bool {
	if o != nil && !IsNil(o.ExpiryDate) {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given string and assigns it to the ExpiryDate field.
func (o *ExtractionExtractedData) SetExpiryDate(v string) {
	o.ExpiryDate = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetNationality() string {
	if o == nil || IsNil(o.Nationality) {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetNationalityOk() (*string, bool) {
	if o == nil || IsNil(o.Nationality) {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasNationality() bool {
	if o != nil && !IsNil(o.Nationality) {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *ExtractionExtractedData) SetNationality(v string) {
	o.Nationality = &v
}

// GetMrzLine1 returns the MrzLine1 field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetMrzLine1() string {
	if o == nil || IsNil(o.MrzLine1) {
		var ret string
		return ret
	}
	return *o.MrzLine1
}

// GetMrzLine1Ok returns a tuple with the MrzLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetMrzLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.MrzLine1) {
		return nil, false
	}
	return o.MrzLine1, true
}

// HasMrzLine1 returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasMrzLine1() bool {
	if o != nil && !IsNil(o.MrzLine1) {
		return true
	}

	return false
}

// SetMrzLine1 gets a reference to the given string and assigns it to the MrzLine1 field.
func (o *ExtractionExtractedData) SetMrzLine1(v string) {
	o.MrzLine1 = &v
}

// GetMrzLine2 returns the MrzLine2 field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetMrzLine2() string {
	if o == nil || IsNil(o.MrzLine2) {
		var ret string
		return ret
	}
	return *o.MrzLine2
}

// GetMrzLine2Ok returns a tuple with the MrzLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetMrzLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.MrzLine2) {
		return nil, false
	}
	return o.MrzLine2, true
}

// HasMrzLine2 returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasMrzLine2() bool {
	if o != nil && !IsNil(o.MrzLine2) {
		return true
	}

	return false
}

// SetMrzLine2 gets a reference to the given string and assigns it to the MrzLine2 field.
func (o *ExtractionExtractedData) SetMrzLine2(v string) {
	o.MrzLine2 = &v
}

// GetMrzLine3 returns the MrzLine3 field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetMrzLine3() string {
	if o == nil || IsNil(o.MrzLine3) {
		var ret string
		return ret
	}
	return *o.MrzLine3
}

// GetMrzLine3Ok returns a tuple with the MrzLine3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetMrzLine3Ok() (*string, bool) {
	if o == nil || IsNil(o.MrzLine3) {
		return nil, false
	}
	return o.MrzLine3, true
}

// HasMrzLine3 returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasMrzLine3() bool {
	if o != nil && !IsNil(o.MrzLine3) {
		return true
	}

	return false
}

// SetMrzLine3 gets a reference to the given string and assigns it to the MrzLine3 field.
func (o *ExtractionExtractedData) SetMrzLine3(v string) {
	o.MrzLine3 = &v
}

// GetAddress1 returns the Address1 field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetAddress1() string {
	if o == nil || IsNil(o.Address1) {
		var ret string
		return ret
	}
	return *o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetAddress1Ok() (*string, bool) {
	if o == nil || IsNil(o.Address1) {
		return nil, false
	}
	return o.Address1, true
}

// HasAddress1 returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasAddress1() bool {
	if o != nil && !IsNil(o.Address1) {
		return true
	}

	return false
}

// SetAddress1 gets a reference to the given string and assigns it to the Address1 field.
func (o *ExtractionExtractedData) SetAddress1(v string) {
	o.Address1 = &v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetAddress2() string {
	if o == nil || IsNil(o.Address2) {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.Address2) {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasAddress2() bool {
	if o != nil && !IsNil(o.Address2) {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *ExtractionExtractedData) SetAddress2(v string) {
	o.Address2 = &v
}

// GetAddress3 returns the Address3 field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetAddress3() string {
	if o == nil || IsNil(o.Address3) {
		var ret string
		return ret
	}
	return *o.Address3
}

// GetAddress3Ok returns a tuple with the Address3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetAddress3Ok() (*string, bool) {
	if o == nil || IsNil(o.Address3) {
		return nil, false
	}
	return o.Address3, true
}

// HasAddress3 returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasAddress3() bool {
	if o != nil && !IsNil(o.Address3) {
		return true
	}

	return false
}

// SetAddress3 gets a reference to the given string and assigns it to the Address3 field.
func (o *ExtractionExtractedData) SetAddress3(v string) {
	o.Address3 = &v
}

// GetAddress4 returns the Address4 field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetAddress4() string {
	if o == nil || IsNil(o.Address4) {
		var ret string
		return ret
	}
	return *o.Address4
}

// GetAddress4Ok returns a tuple with the Address4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetAddress4Ok() (*string, bool) {
	if o == nil || IsNil(o.Address4) {
		return nil, false
	}
	return o.Address4, true
}

// HasAddress4 returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasAddress4() bool {
	if o != nil && !IsNil(o.Address4) {
		return true
	}

	return false
}

// SetAddress4 gets a reference to the given string and assigns it to the Address4 field.
func (o *ExtractionExtractedData) SetAddress4(v string) {
	o.Address4 = &v
}

// GetAddress5 returns the Address5 field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetAddress5() string {
	if o == nil || IsNil(o.Address5) {
		var ret string
		return ret
	}
	return *o.Address5
}

// GetAddress5Ok returns a tuple with the Address5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetAddress5Ok() (*string, bool) {
	if o == nil || IsNil(o.Address5) {
		return nil, false
	}
	return o.Address5, true
}

// HasAddress5 returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasAddress5() bool {
	if o != nil && !IsNil(o.Address5) {
		return true
	}

	return false
}

// SetAddress5 gets a reference to the given string and assigns it to the Address5 field.
func (o *ExtractionExtractedData) SetAddress5(v string) {
	o.Address5 = &v
}

// GetIssuingAuthority returns the IssuingAuthority field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetIssuingAuthority() string {
	if o == nil || IsNil(o.IssuingAuthority) {
		var ret string
		return ret
	}
	return *o.IssuingAuthority
}

// GetIssuingAuthorityOk returns a tuple with the IssuingAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetIssuingAuthorityOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingAuthority) {
		return nil, false
	}
	return o.IssuingAuthority, true
}

// HasIssuingAuthority returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasIssuingAuthority() bool {
	if o != nil && !IsNil(o.IssuingAuthority) {
		return true
	}

	return false
}

// SetIssuingAuthority gets a reference to the given string and assigns it to the IssuingAuthority field.
func (o *ExtractionExtractedData) SetIssuingAuthority(v string) {
	o.IssuingAuthority = &v
}

// GetIssuingCountry returns the IssuingCountry field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetIssuingCountry() CountryCodes {
	if o == nil || IsNil(o.IssuingCountry) {
		var ret CountryCodes
		return ret
	}
	return *o.IssuingCountry
}

// GetIssuingCountryOk returns a tuple with the IssuingCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetIssuingCountryOk() (*CountryCodes, bool) {
	if o == nil || IsNil(o.IssuingCountry) {
		return nil, false
	}
	return o.IssuingCountry, true
}

// HasIssuingCountry returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasIssuingCountry() bool {
	if o != nil && !IsNil(o.IssuingCountry) {
		return true
	}

	return false
}

// SetIssuingCountry gets a reference to the given CountryCodes and assigns it to the IssuingCountry field.
func (o *ExtractionExtractedData) SetIssuingCountry(v CountryCodes) {
	o.IssuingCountry = &v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetDocumentType() DocumentTypes {
	if o == nil || IsNil(o.DocumentType) {
		var ret DocumentTypes
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetDocumentTypeOk() (*DocumentTypes, bool) {
	if o == nil || IsNil(o.DocumentType) {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasDocumentType() bool {
	if o != nil && !IsNil(o.DocumentType) {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given DocumentTypes and assigns it to the DocumentType field.
func (o *ExtractionExtractedData) SetDocumentType(v DocumentTypes) {
	o.DocumentType = &v
}

// GetPlaceOfBirth returns the PlaceOfBirth field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetPlaceOfBirth() string {
	if o == nil || IsNil(o.PlaceOfBirth) {
		var ret string
		return ret
	}
	return *o.PlaceOfBirth
}

// GetPlaceOfBirthOk returns a tuple with the PlaceOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetPlaceOfBirthOk() (*string, bool) {
	if o == nil || IsNil(o.PlaceOfBirth) {
		return nil, false
	}
	return o.PlaceOfBirth, true
}

// HasPlaceOfBirth returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasPlaceOfBirth() bool {
	if o != nil && !IsNil(o.PlaceOfBirth) {
		return true
	}

	return false
}

// SetPlaceOfBirth gets a reference to the given string and assigns it to the PlaceOfBirth field.
func (o *ExtractionExtractedData) SetPlaceOfBirth(v string) {
	o.PlaceOfBirth = &v
}

// GetIssuingState returns the IssuingState field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetIssuingState() string {
	if o == nil || IsNil(o.IssuingState) {
		var ret string
		return ret
	}
	return *o.IssuingState
}

// GetIssuingStateOk returns a tuple with the IssuingState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetIssuingStateOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingState) {
		return nil, false
	}
	return o.IssuingState, true
}

// HasIssuingState returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasIssuingState() bool {
	if o != nil && !IsNil(o.IssuingState) {
		return true
	}

	return false
}

// SetIssuingState gets a reference to the given string and assigns it to the IssuingState field.
func (o *ExtractionExtractedData) SetIssuingState(v string) {
	o.IssuingState = &v
}

// GetIssuingDate returns the IssuingDate field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetIssuingDate() string {
	if o == nil || IsNil(o.IssuingDate) {
		var ret string
		return ret
	}
	return *o.IssuingDate
}

// GetIssuingDateOk returns a tuple with the IssuingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetIssuingDateOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingDate) {
		return nil, false
	}
	return o.IssuingDate, true
}

// HasIssuingDate returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasIssuingDate() bool {
	if o != nil && !IsNil(o.IssuingDate) {
		return true
	}

	return false
}

// SetIssuingDate gets a reference to the given string and assigns it to the IssuingDate field.
func (o *ExtractionExtractedData) SetIssuingDate(v string) {
	o.IssuingDate = &v
}

// GetPersonalNumber returns the PersonalNumber field value if set, zero value otherwise.
func (o *ExtractionExtractedData) GetPersonalNumber() string {
	if o == nil || IsNil(o.PersonalNumber) {
		var ret string
		return ret
	}
	return *o.PersonalNumber
}

// GetPersonalNumberOk returns a tuple with the PersonalNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractionExtractedData) GetPersonalNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PersonalNumber) {
		return nil, false
	}
	return o.PersonalNumber, true
}

// HasPersonalNumber returns a boolean if a field has been set.
func (o *ExtractionExtractedData) HasPersonalNumber() bool {
	if o != nil && !IsNil(o.PersonalNumber) {
		return true
	}

	return false
}

// SetPersonalNumber gets a reference to the given string and assigns it to the PersonalNumber field.
func (o *ExtractionExtractedData) SetPersonalNumber(v string) {
	o.PersonalNumber = &v
}

func (o ExtractionExtractedData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtractionExtractedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DocumentNumber) {
		toSerialize["document_number"] = o.DocumentNumber
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.FullName) {
		toSerialize["full_name"] = o.FullName
	}
	if !IsNil(o.SpouseName) {
		toSerialize["spouse_name"] = o.SpouseName
	}
	if !IsNil(o.WidowName) {
		toSerialize["widow_name"] = o.WidowName
	}
	if !IsNil(o.AliasName) {
		toSerialize["alias_name"] = o.AliasName
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.DateOfBirth) {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if !IsNil(o.DateOfExpiry) {
		toSerialize["date_of_expiry"] = o.DateOfExpiry
	}
	if !IsNil(o.ExpiryDate) {
		toSerialize["expiry_date"] = o.ExpiryDate
	}
	if !IsNil(o.Nationality) {
		toSerialize["nationality"] = o.Nationality
	}
	if !IsNil(o.MrzLine1) {
		toSerialize["mrz_line_1"] = o.MrzLine1
	}
	if !IsNil(o.MrzLine2) {
		toSerialize["mrz_line_2"] = o.MrzLine2
	}
	if !IsNil(o.MrzLine3) {
		toSerialize["mrz_line_3"] = o.MrzLine3
	}
	if !IsNil(o.Address1) {
		toSerialize["address_1"] = o.Address1
	}
	if !IsNil(o.Address2) {
		toSerialize["address_2"] = o.Address2
	}
	if !IsNil(o.Address3) {
		toSerialize["address_3"] = o.Address3
	}
	if !IsNil(o.Address4) {
		toSerialize["address_4"] = o.Address4
	}
	if !IsNil(o.Address5) {
		toSerialize["address_5"] = o.Address5
	}
	if !IsNil(o.IssuingAuthority) {
		toSerialize["issuing_authority"] = o.IssuingAuthority
	}
	if !IsNil(o.IssuingCountry) {
		toSerialize["issuing_country"] = o.IssuingCountry
	}
	if !IsNil(o.DocumentType) {
		toSerialize["document_type"] = o.DocumentType
	}
	if !IsNil(o.PlaceOfBirth) {
		toSerialize["place_of_birth"] = o.PlaceOfBirth
	}
	if !IsNil(o.IssuingState) {
		toSerialize["issuing_state"] = o.IssuingState
	}
	if !IsNil(o.IssuingDate) {
		toSerialize["issuing_date"] = o.IssuingDate
	}
	if !IsNil(o.PersonalNumber) {
		toSerialize["personal_number"] = o.PersonalNumber
	}
	return toSerialize, nil
}

type NullableExtractionExtractedData struct {
	value *ExtractionExtractedData
	isSet bool
}

func (v NullableExtractionExtractedData) Get() *ExtractionExtractedData {
	return v.value
}

func (v *NullableExtractionExtractedData) Set(val *ExtractionExtractedData) {
	v.value = val
	v.isSet = true
}

func (v NullableExtractionExtractedData) IsSet() bool {
	return v.isSet
}

func (v *NullableExtractionExtractedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtractionExtractedData(val *ExtractionExtractedData) *NullableExtractionExtractedData {
	return &NullableExtractionExtractedData{value: val, isSet: true}
}

func (v NullableExtractionExtractedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtractionExtractedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


