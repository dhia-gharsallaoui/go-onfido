/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExtractRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtractRequest{}

// ExtractRequest struct for ExtractRequest
type ExtractRequest struct {
	// The unique identifier of the uploaded document to run extraction on
	DocumentId string `json:"document_id"`
}

type _ExtractRequest ExtractRequest

// NewExtractRequest instantiates a new ExtractRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtractRequest(documentId string) *ExtractRequest {
	this := ExtractRequest{}
	this.DocumentId = documentId
	return &this
}

// NewExtractRequestWithDefaults instantiates a new ExtractRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtractRequestWithDefaults() *ExtractRequest {
	this := ExtractRequest{}
	return &this
}

// GetDocumentId returns the DocumentId field value
func (o *ExtractRequest) GetDocumentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value
// and a boolean to check if the value has been set.
func (o *ExtractRequest) GetDocumentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentId, true
}

// SetDocumentId sets field value
func (o *ExtractRequest) SetDocumentId(v string) {
	o.DocumentId = v
}

func (o ExtractRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtractRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["document_id"] = o.DocumentId
	return toSerialize, nil
}

func (o *ExtractRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"document_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExtractRequest := _ExtractRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExtractRequest)

	if err != nil {
		return err
	}

	*o = ExtractRequest(varExtractRequest)

	return err
}

type NullableExtractRequest struct {
	value *ExtractRequest
	isSet bool
}

func (v NullableExtractRequest) Get() *ExtractRequest {
	return v.value
}

func (v *NullableExtractRequest) Set(val *ExtractRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExtractRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExtractRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtractRequest(val *ExtractRequest) *NullableExtractRequest {
	return &NullableExtractRequest{value: val, isSet: true}
}

func (v NullableExtractRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtractRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


