/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndiaPanReportAllOfBreakdownDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndiaPanReportAllOfBreakdownDevice{}

// IndiaPanReportAllOfBreakdownDevice struct for IndiaPanReportAllOfBreakdownDevice
type IndiaPanReportAllOfBreakdownDevice struct {
	Breakdown *IndiaPanReportAllOfBreakdownDeviceBreakdown `json:"breakdown,omitempty"`
}

// NewIndiaPanReportAllOfBreakdownDevice instantiates a new IndiaPanReportAllOfBreakdownDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndiaPanReportAllOfBreakdownDevice() *IndiaPanReportAllOfBreakdownDevice {
	this := IndiaPanReportAllOfBreakdownDevice{}
	return &this
}

// NewIndiaPanReportAllOfBreakdownDeviceWithDefaults instantiates a new IndiaPanReportAllOfBreakdownDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndiaPanReportAllOfBreakdownDeviceWithDefaults() *IndiaPanReportAllOfBreakdownDevice {
	this := IndiaPanReportAllOfBreakdownDevice{}
	return &this
}

// GetBreakdown returns the Breakdown field value if set, zero value otherwise.
func (o *IndiaPanReportAllOfBreakdownDevice) GetBreakdown() IndiaPanReportAllOfBreakdownDeviceBreakdown {
	if o == nil || IsNil(o.Breakdown) {
		var ret IndiaPanReportAllOfBreakdownDeviceBreakdown
		return ret
	}
	return *o.Breakdown
}

// GetBreakdownOk returns a tuple with the Breakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndiaPanReportAllOfBreakdownDevice) GetBreakdownOk() (*IndiaPanReportAllOfBreakdownDeviceBreakdown, bool) {
	if o == nil || IsNil(o.Breakdown) {
		return nil, false
	}
	return o.Breakdown, true
}

// HasBreakdown returns a boolean if a field has been set.
func (o *IndiaPanReportAllOfBreakdownDevice) HasBreakdown() bool {
	if o != nil && !IsNil(o.Breakdown) {
		return true
	}

	return false
}

// SetBreakdown gets a reference to the given IndiaPanReportAllOfBreakdownDeviceBreakdown and assigns it to the Breakdown field.
func (o *IndiaPanReportAllOfBreakdownDevice) SetBreakdown(v IndiaPanReportAllOfBreakdownDeviceBreakdown) {
	o.Breakdown = &v
}

func (o IndiaPanReportAllOfBreakdownDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndiaPanReportAllOfBreakdownDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Breakdown) {
		toSerialize["breakdown"] = o.Breakdown
	}
	return toSerialize, nil
}

type NullableIndiaPanReportAllOfBreakdownDevice struct {
	value *IndiaPanReportAllOfBreakdownDevice
	isSet bool
}

func (v NullableIndiaPanReportAllOfBreakdownDevice) Get() *IndiaPanReportAllOfBreakdownDevice {
	return v.value
}

func (v *NullableIndiaPanReportAllOfBreakdownDevice) Set(val *IndiaPanReportAllOfBreakdownDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableIndiaPanReportAllOfBreakdownDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableIndiaPanReportAllOfBreakdownDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndiaPanReportAllOfBreakdownDevice(val *IndiaPanReportAllOfBreakdownDevice) *NullableIndiaPanReportAllOfBreakdownDevice {
	return &NullableIndiaPanReportAllOfBreakdownDevice{value: val, isSet: true}
}

func (v NullableIndiaPanReportAllOfBreakdownDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndiaPanReportAllOfBreakdownDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


