/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WebhookResend type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookResend{}

// WebhookResend struct for WebhookResend
type WebhookResend struct {
	Data []WebhooksResendItem `json:"data,omitempty"`
}

// NewWebhookResend instantiates a new WebhookResend object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookResend() *WebhookResend {
	this := WebhookResend{}
	return &this
}

// NewWebhookResendWithDefaults instantiates a new WebhookResend object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookResendWithDefaults() *WebhookResend {
	this := WebhookResend{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *WebhookResend) GetData() []WebhooksResendItem {
	if o == nil || IsNil(o.Data) {
		var ret []WebhooksResendItem
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResend) GetDataOk() ([]WebhooksResendItem, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *WebhookResend) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []WebhooksResendItem and assigns it to the Data field.
func (o *WebhookResend) SetData(v []WebhooksResendItem) {
	o.Data = v
}

func (o WebhookResend) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookResend) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableWebhookResend struct {
	value *WebhookResend
	isSet bool
}

func (v NullableWebhookResend) Get() *WebhookResend {
	return v.value
}

func (v *NullableWebhookResend) Set(val *WebhookResend) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookResend) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookResend) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookResend(val *WebhookResend) *NullableWebhookResend {
	return &NullableWebhookResend{value: val, isSet: true}
}

func (v NullableWebhookResend) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookResend) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


