/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResultsFeedback type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultsFeedback{}

// ResultsFeedback struct for ResultsFeedback
type ResultsFeedback struct {
	// The expected result for the check or report.
	ExpectedResult *string `json:"expected_result,omitempty"`
	// The ID of the check (only if report_id is not provided).
	CheckId *string `json:"check_id,omitempty"`
	// The ID of the check (only if check_id is not provided).
	ReportId *string `json:"report_id,omitempty"`
	// Any additional information or feedback.
	FeedbackNotes *string `json:"feedback_notes,omitempty"`
}

// NewResultsFeedback instantiates a new ResultsFeedback object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultsFeedback() *ResultsFeedback {
	this := ResultsFeedback{}
	return &this
}

// NewResultsFeedbackWithDefaults instantiates a new ResultsFeedback object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultsFeedbackWithDefaults() *ResultsFeedback {
	this := ResultsFeedback{}
	return &this
}

// GetExpectedResult returns the ExpectedResult field value if set, zero value otherwise.
func (o *ResultsFeedback) GetExpectedResult() string {
	if o == nil || IsNil(o.ExpectedResult) {
		var ret string
		return ret
	}
	return *o.ExpectedResult
}

// GetExpectedResultOk returns a tuple with the ExpectedResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultsFeedback) GetExpectedResultOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedResult) {
		return nil, false
	}
	return o.ExpectedResult, true
}

// HasExpectedResult returns a boolean if a field has been set.
func (o *ResultsFeedback) HasExpectedResult() bool {
	if o != nil && !IsNil(o.ExpectedResult) {
		return true
	}

	return false
}

// SetExpectedResult gets a reference to the given string and assigns it to the ExpectedResult field.
func (o *ResultsFeedback) SetExpectedResult(v string) {
	o.ExpectedResult = &v
}

// GetCheckId returns the CheckId field value if set, zero value otherwise.
func (o *ResultsFeedback) GetCheckId() string {
	if o == nil || IsNil(o.CheckId) {
		var ret string
		return ret
	}
	return *o.CheckId
}

// GetCheckIdOk returns a tuple with the CheckId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultsFeedback) GetCheckIdOk() (*string, bool) {
	if o == nil || IsNil(o.CheckId) {
		return nil, false
	}
	return o.CheckId, true
}

// HasCheckId returns a boolean if a field has been set.
func (o *ResultsFeedback) HasCheckId() bool {
	if o != nil && !IsNil(o.CheckId) {
		return true
	}

	return false
}

// SetCheckId gets a reference to the given string and assigns it to the CheckId field.
func (o *ResultsFeedback) SetCheckId(v string) {
	o.CheckId = &v
}

// GetReportId returns the ReportId field value if set, zero value otherwise.
func (o *ResultsFeedback) GetReportId() string {
	if o == nil || IsNil(o.ReportId) {
		var ret string
		return ret
	}
	return *o.ReportId
}

// GetReportIdOk returns a tuple with the ReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultsFeedback) GetReportIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReportId) {
		return nil, false
	}
	return o.ReportId, true
}

// HasReportId returns a boolean if a field has been set.
func (o *ResultsFeedback) HasReportId() bool {
	if o != nil && !IsNil(o.ReportId) {
		return true
	}

	return false
}

// SetReportId gets a reference to the given string and assigns it to the ReportId field.
func (o *ResultsFeedback) SetReportId(v string) {
	o.ReportId = &v
}

// GetFeedbackNotes returns the FeedbackNotes field value if set, zero value otherwise.
func (o *ResultsFeedback) GetFeedbackNotes() string {
	if o == nil || IsNil(o.FeedbackNotes) {
		var ret string
		return ret
	}
	return *o.FeedbackNotes
}

// GetFeedbackNotesOk returns a tuple with the FeedbackNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultsFeedback) GetFeedbackNotesOk() (*string, bool) {
	if o == nil || IsNil(o.FeedbackNotes) {
		return nil, false
	}
	return o.FeedbackNotes, true
}

// HasFeedbackNotes returns a boolean if a field has been set.
func (o *ResultsFeedback) HasFeedbackNotes() bool {
	if o != nil && !IsNil(o.FeedbackNotes) {
		return true
	}

	return false
}

// SetFeedbackNotes gets a reference to the given string and assigns it to the FeedbackNotes field.
func (o *ResultsFeedback) SetFeedbackNotes(v string) {
	o.FeedbackNotes = &v
}

func (o ResultsFeedback) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultsFeedback) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpectedResult) {
		toSerialize["expected_result"] = o.ExpectedResult
	}
	if !IsNil(o.CheckId) {
		toSerialize["check_id"] = o.CheckId
	}
	if !IsNil(o.ReportId) {
		toSerialize["report_id"] = o.ReportId
	}
	if !IsNil(o.FeedbackNotes) {
		toSerialize["feedback_notes"] = o.FeedbackNotes
	}
	return toSerialize, nil
}

type NullableResultsFeedback struct {
	value *ResultsFeedback
	isSet bool
}

func (v NullableResultsFeedback) Get() *ResultsFeedback {
	return v.value
}

func (v *NullableResultsFeedback) Set(val *ResultsFeedback) {
	v.value = val
	v.isSet = true
}

func (v NullableResultsFeedback) IsSet() bool {
	return v.isSet
}

func (v *NullableResultsFeedback) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultsFeedback(val *ResultsFeedback) *NullableResultsFeedback {
	return &NullableResultsFeedback{value: val, isSet: true}
}

func (v NullableResultsFeedback) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultsFeedback) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


