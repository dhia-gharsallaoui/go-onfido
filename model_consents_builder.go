/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConsentsBuilder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsentsBuilder{}

// ConsentsBuilder struct for ConsentsBuilder
type ConsentsBuilder struct {
}

// NewConsentsBuilder instantiates a new ConsentsBuilder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsentsBuilder() *ConsentsBuilder {
	this := ConsentsBuilder{}
	return &this
}

// NewConsentsBuilderWithDefaults instantiates a new ConsentsBuilder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsentsBuilderWithDefaults() *ConsentsBuilder {
	this := ConsentsBuilder{}
	return &this
}

func (o ConsentsBuilder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsentsBuilder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableConsentsBuilder struct {
	value *ConsentsBuilder
	isSet bool
}

func (v NullableConsentsBuilder) Get() *ConsentsBuilder {
	return v.value
}

func (v *NullableConsentsBuilder) Set(val *ConsentsBuilder) {
	v.value = val
	v.isSet = true
}

func (v NullableConsentsBuilder) IsSet() bool {
	return v.isSet
}

func (v *NullableConsentsBuilder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsentsBuilder(val *ConsentsBuilder) *NullableConsentsBuilder {
	return &NullableConsentsBuilder{value: val, isSet: true}
}

func (v NullableConsentsBuilder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsentsBuilder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


