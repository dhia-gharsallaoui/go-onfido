/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndiaPanReportAllOfPropertiesDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndiaPanReportAllOfPropertiesDevice{}

// IndiaPanReportAllOfPropertiesDevice struct for IndiaPanReportAllOfPropertiesDevice
type IndiaPanReportAllOfPropertiesDevice struct {
	// The applicant's PAN (10 digit alphanumeric number).
	Pan *string `json:"pan,omitempty"`
	// The applicant's full name.
	FullName *string `json:"full_name,omitempty"`
}

// NewIndiaPanReportAllOfPropertiesDevice instantiates a new IndiaPanReportAllOfPropertiesDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndiaPanReportAllOfPropertiesDevice() *IndiaPanReportAllOfPropertiesDevice {
	this := IndiaPanReportAllOfPropertiesDevice{}
	return &this
}

// NewIndiaPanReportAllOfPropertiesDeviceWithDefaults instantiates a new IndiaPanReportAllOfPropertiesDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndiaPanReportAllOfPropertiesDeviceWithDefaults() *IndiaPanReportAllOfPropertiesDevice {
	this := IndiaPanReportAllOfPropertiesDevice{}
	return &this
}

// GetPan returns the Pan field value if set, zero value otherwise.
func (o *IndiaPanReportAllOfPropertiesDevice) GetPan() string {
	if o == nil || IsNil(o.Pan) {
		var ret string
		return ret
	}
	return *o.Pan
}

// GetPanOk returns a tuple with the Pan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndiaPanReportAllOfPropertiesDevice) GetPanOk() (*string, bool) {
	if o == nil || IsNil(o.Pan) {
		return nil, false
	}
	return o.Pan, true
}

// HasPan returns a boolean if a field has been set.
func (o *IndiaPanReportAllOfPropertiesDevice) HasPan() bool {
	if o != nil && !IsNil(o.Pan) {
		return true
	}

	return false
}

// SetPan gets a reference to the given string and assigns it to the Pan field.
func (o *IndiaPanReportAllOfPropertiesDevice) SetPan(v string) {
	o.Pan = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *IndiaPanReportAllOfPropertiesDevice) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndiaPanReportAllOfPropertiesDevice) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *IndiaPanReportAllOfPropertiesDevice) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *IndiaPanReportAllOfPropertiesDevice) SetFullName(v string) {
	o.FullName = &v
}

func (o IndiaPanReportAllOfPropertiesDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndiaPanReportAllOfPropertiesDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pan) {
		toSerialize["pan"] = o.Pan
	}
	if !IsNil(o.FullName) {
		toSerialize["full_name"] = o.FullName
	}
	return toSerialize, nil
}

type NullableIndiaPanReportAllOfPropertiesDevice struct {
	value *IndiaPanReportAllOfPropertiesDevice
	isSet bool
}

func (v NullableIndiaPanReportAllOfPropertiesDevice) Get() *IndiaPanReportAllOfPropertiesDevice {
	return v.value
}

func (v *NullableIndiaPanReportAllOfPropertiesDevice) Set(val *IndiaPanReportAllOfPropertiesDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableIndiaPanReportAllOfPropertiesDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableIndiaPanReportAllOfPropertiesDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndiaPanReportAllOfPropertiesDevice(val *IndiaPanReportAllOfPropertiesDevice) *NullableIndiaPanReportAllOfPropertiesDevice {
	return &NullableIndiaPanReportAllOfPropertiesDevice{value: val, isSet: true}
}

func (v NullableIndiaPanReportAllOfPropertiesDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndiaPanReportAllOfPropertiesDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


