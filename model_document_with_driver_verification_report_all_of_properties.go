/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DocumentWithDriverVerificationReportAllOfProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentWithDriverVerificationReportAllOfProperties{}

// DocumentWithDriverVerificationReportAllOfProperties struct for DocumentWithDriverVerificationReportAllOfProperties
type DocumentWithDriverVerificationReportAllOfProperties struct {
	DateOfBirth *string `json:"date_of_birth,omitempty"`
	DateOfExpiry *string `json:"date_of_expiry,omitempty"`
	PersonalNumber *string `json:"personal_number,omitempty"`
	DocumentNumbers []DocumentPropertiesDocumentNumbersInner `json:"document_numbers,omitempty"`
	DocumentType *string `json:"document_type,omitempty"`
	FirstName *string `json:"first_name,omitempty"`
	MiddleName *string `json:"middle_name,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	Gender *string `json:"gender,omitempty"`
	IssuingCountry *string `json:"issuing_country,omitempty"`
	Nationality *string `json:"nationality,omitempty"`
	IssuingState *string `json:"issuing_state,omitempty"`
	IssuingDate *string `json:"issuing_date,omitempty"`
	Categorisation *string `json:"categorisation,omitempty"`
	MrzLine1 *string `json:"mrz_line1,omitempty"`
	MrzLine2 *string `json:"mrz_line2,omitempty"`
	MrzLine3 *string `json:"mrz_line3,omitempty"`
	Address *string `json:"address,omitempty"`
	PlaceOfBirth *string `json:"place_of_birth,omitempty"`
	SpouseName *string `json:"spouse_name,omitempty"`
	WidowName *string `json:"widow_name,omitempty"`
	AliasName *string `json:"alias_name,omitempty"`
	IssuingAuthority *string `json:"issuing_authority,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	CivilState *string `json:"civil_state,omitempty"`
	Expatriation *string `json:"expatriation,omitempty"`
	FatherName *string `json:"father_name,omitempty"`
	MotherName *string `json:"mother_name,omitempty"`
	Religion *string `json:"religion,omitempty"`
	TypeOfPermit *string `json:"type_of_permit,omitempty"`
	VersionNumber *string `json:"version_number,omitempty"`
	DocumentSubtype *string `json:"document_subtype,omitempty"`
	Profession *string `json:"profession,omitempty"`
	SecurityDocumentNumber *string `json:"security_document_number,omitempty"`
	TaxNumber *string `json:"tax_number,omitempty"`
	NistIdentityEvidenceStrength *string `json:"nist_identity_evidence_strength,omitempty"`
	HasIssuanceConfirmation *string `json:"has_issuance_confirmation,omitempty"`
	RealIdCompliance *bool `json:"real_id_compliance,omitempty"`
	SecurityTier *string `json:"security_tier,omitempty"`
	AddressLines *DocumentPropertiesAddressLines `json:"address_lines,omitempty"`
	Barcode []DocumentPropertiesBarcodeInner `json:"barcode,omitempty"`
	Nfc *DocumentPropertiesNfc `json:"nfc,omitempty"`
	DrivingLicenceInformation *DocumentPropertiesDrivingLicenceInformation `json:"driving_licence_information,omitempty"`
	DocumentClassification *DocumentPropertiesDocumentClassification `json:"document_classification,omitempty"`
	ExtractedData *DocumentPropertiesExtractedData `json:"extracted_data,omitempty"`
	// True for **non-restricted** driving licences
	DriversLicence *bool `json:"drivers_licence,omitempty"`
	// True for **limited/restricted** driving license, including learner's permits
	RestrictedLicence *bool `json:"restricted_licence,omitempty"`
	// Underlying, non-normalised, licence category (e.g. \"Junior operators license\")
	RawLicenceCategory *string `json:"raw_licence_category,omitempty"`
	// Comma-separated vehicle classes that the user is qualified for
	RawVehicleClasses *string `json:"raw_vehicle_classes,omitempty"`
	// Detailed classes/categories information
	VehicleClassDetails []DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner `json:"vehicle_class_details,omitempty"`
	PassengerVehicle *DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle `json:"passenger_vehicle,omitempty"`
}

// NewDocumentWithDriverVerificationReportAllOfProperties instantiates a new DocumentWithDriverVerificationReportAllOfProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentWithDriverVerificationReportAllOfProperties() *DocumentWithDriverVerificationReportAllOfProperties {
	this := DocumentWithDriverVerificationReportAllOfProperties{}
	return &this
}

// NewDocumentWithDriverVerificationReportAllOfPropertiesWithDefaults instantiates a new DocumentWithDriverVerificationReportAllOfProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentWithDriverVerificationReportAllOfPropertiesWithDefaults() *DocumentWithDriverVerificationReportAllOfProperties {
	this := DocumentWithDriverVerificationReportAllOfProperties{}
	return &this
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDateOfBirth() string {
	if o == nil || IsNil(o.DateOfBirth) {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDateOfBirthOk() (*string, bool) {
	if o == nil || IsNil(o.DateOfBirth) {
		return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasDateOfBirth() bool {
	if o != nil && !IsNil(o.DateOfBirth) {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetDateOfExpiry returns the DateOfExpiry field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDateOfExpiry() string {
	if o == nil || IsNil(o.DateOfExpiry) {
		var ret string
		return ret
	}
	return *o.DateOfExpiry
}

// GetDateOfExpiryOk returns a tuple with the DateOfExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDateOfExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.DateOfExpiry) {
		return nil, false
	}
	return o.DateOfExpiry, true
}

// HasDateOfExpiry returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasDateOfExpiry() bool {
	if o != nil && !IsNil(o.DateOfExpiry) {
		return true
	}

	return false
}

// SetDateOfExpiry gets a reference to the given string and assigns it to the DateOfExpiry field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetDateOfExpiry(v string) {
	o.DateOfExpiry = &v
}

// GetPersonalNumber returns the PersonalNumber field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetPersonalNumber() string {
	if o == nil || IsNil(o.PersonalNumber) {
		var ret string
		return ret
	}
	return *o.PersonalNumber
}

// GetPersonalNumberOk returns a tuple with the PersonalNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetPersonalNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PersonalNumber) {
		return nil, false
	}
	return o.PersonalNumber, true
}

// HasPersonalNumber returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasPersonalNumber() bool {
	if o != nil && !IsNil(o.PersonalNumber) {
		return true
	}

	return false
}

// SetPersonalNumber gets a reference to the given string and assigns it to the PersonalNumber field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetPersonalNumber(v string) {
	o.PersonalNumber = &v
}

// GetDocumentNumbers returns the DocumentNumbers field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDocumentNumbers() []DocumentPropertiesDocumentNumbersInner {
	if o == nil || IsNil(o.DocumentNumbers) {
		var ret []DocumentPropertiesDocumentNumbersInner
		return ret
	}
	return o.DocumentNumbers
}

// GetDocumentNumbersOk returns a tuple with the DocumentNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDocumentNumbersOk() ([]DocumentPropertiesDocumentNumbersInner, bool) {
	if o == nil || IsNil(o.DocumentNumbers) {
		return nil, false
	}
	return o.DocumentNumbers, true
}

// HasDocumentNumbers returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasDocumentNumbers() bool {
	if o != nil && !IsNil(o.DocumentNumbers) {
		return true
	}

	return false
}

// SetDocumentNumbers gets a reference to the given []DocumentPropertiesDocumentNumbersInner and assigns it to the DocumentNumbers field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetDocumentNumbers(v []DocumentPropertiesDocumentNumbersInner) {
	o.DocumentNumbers = v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDocumentType() string {
	if o == nil || IsNil(o.DocumentType) {
		var ret string
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDocumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentType) {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasDocumentType() bool {
	if o != nil && !IsNil(o.DocumentType) {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given string and assigns it to the DocumentType field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetDocumentType(v string) {
	o.DocumentType = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetLastName(v string) {
	o.LastName = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetGender(v string) {
	o.Gender = &v
}

// GetIssuingCountry returns the IssuingCountry field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetIssuingCountry() string {
	if o == nil || IsNil(o.IssuingCountry) {
		var ret string
		return ret
	}
	return *o.IssuingCountry
}

// GetIssuingCountryOk returns a tuple with the IssuingCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetIssuingCountryOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingCountry) {
		return nil, false
	}
	return o.IssuingCountry, true
}

// HasIssuingCountry returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasIssuingCountry() bool {
	if o != nil && !IsNil(o.IssuingCountry) {
		return true
	}

	return false
}

// SetIssuingCountry gets a reference to the given string and assigns it to the IssuingCountry field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetIssuingCountry(v string) {
	o.IssuingCountry = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetNationality() string {
	if o == nil || IsNil(o.Nationality) {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetNationalityOk() (*string, bool) {
	if o == nil || IsNil(o.Nationality) {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasNationality() bool {
	if o != nil && !IsNil(o.Nationality) {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetNationality(v string) {
	o.Nationality = &v
}

// GetIssuingState returns the IssuingState field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetIssuingState() string {
	if o == nil || IsNil(o.IssuingState) {
		var ret string
		return ret
	}
	return *o.IssuingState
}

// GetIssuingStateOk returns a tuple with the IssuingState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetIssuingStateOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingState) {
		return nil, false
	}
	return o.IssuingState, true
}

// HasIssuingState returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasIssuingState() bool {
	if o != nil && !IsNil(o.IssuingState) {
		return true
	}

	return false
}

// SetIssuingState gets a reference to the given string and assigns it to the IssuingState field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetIssuingState(v string) {
	o.IssuingState = &v
}

// GetIssuingDate returns the IssuingDate field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetIssuingDate() string {
	if o == nil || IsNil(o.IssuingDate) {
		var ret string
		return ret
	}
	return *o.IssuingDate
}

// GetIssuingDateOk returns a tuple with the IssuingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetIssuingDateOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingDate) {
		return nil, false
	}
	return o.IssuingDate, true
}

// HasIssuingDate returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasIssuingDate() bool {
	if o != nil && !IsNil(o.IssuingDate) {
		return true
	}

	return false
}

// SetIssuingDate gets a reference to the given string and assigns it to the IssuingDate field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetIssuingDate(v string) {
	o.IssuingDate = &v
}

// GetCategorisation returns the Categorisation field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetCategorisation() string {
	if o == nil || IsNil(o.Categorisation) {
		var ret string
		return ret
	}
	return *o.Categorisation
}

// GetCategorisationOk returns a tuple with the Categorisation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetCategorisationOk() (*string, bool) {
	if o == nil || IsNil(o.Categorisation) {
		return nil, false
	}
	return o.Categorisation, true
}

// HasCategorisation returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasCategorisation() bool {
	if o != nil && !IsNil(o.Categorisation) {
		return true
	}

	return false
}

// SetCategorisation gets a reference to the given string and assigns it to the Categorisation field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetCategorisation(v string) {
	o.Categorisation = &v
}

// GetMrzLine1 returns the MrzLine1 field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMrzLine1() string {
	if o == nil || IsNil(o.MrzLine1) {
		var ret string
		return ret
	}
	return *o.MrzLine1
}

// GetMrzLine1Ok returns a tuple with the MrzLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMrzLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.MrzLine1) {
		return nil, false
	}
	return o.MrzLine1, true
}

// HasMrzLine1 returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasMrzLine1() bool {
	if o != nil && !IsNil(o.MrzLine1) {
		return true
	}

	return false
}

// SetMrzLine1 gets a reference to the given string and assigns it to the MrzLine1 field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetMrzLine1(v string) {
	o.MrzLine1 = &v
}

// GetMrzLine2 returns the MrzLine2 field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMrzLine2() string {
	if o == nil || IsNil(o.MrzLine2) {
		var ret string
		return ret
	}
	return *o.MrzLine2
}

// GetMrzLine2Ok returns a tuple with the MrzLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMrzLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.MrzLine2) {
		return nil, false
	}
	return o.MrzLine2, true
}

// HasMrzLine2 returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasMrzLine2() bool {
	if o != nil && !IsNil(o.MrzLine2) {
		return true
	}

	return false
}

// SetMrzLine2 gets a reference to the given string and assigns it to the MrzLine2 field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetMrzLine2(v string) {
	o.MrzLine2 = &v
}

// GetMrzLine3 returns the MrzLine3 field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMrzLine3() string {
	if o == nil || IsNil(o.MrzLine3) {
		var ret string
		return ret
	}
	return *o.MrzLine3
}

// GetMrzLine3Ok returns a tuple with the MrzLine3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMrzLine3Ok() (*string, bool) {
	if o == nil || IsNil(o.MrzLine3) {
		return nil, false
	}
	return o.MrzLine3, true
}

// HasMrzLine3 returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasMrzLine3() bool {
	if o != nil && !IsNil(o.MrzLine3) {
		return true
	}

	return false
}

// SetMrzLine3 gets a reference to the given string and assigns it to the MrzLine3 field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetMrzLine3(v string) {
	o.MrzLine3 = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetAddress(v string) {
	o.Address = &v
}

// GetPlaceOfBirth returns the PlaceOfBirth field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetPlaceOfBirth() string {
	if o == nil || IsNil(o.PlaceOfBirth) {
		var ret string
		return ret
	}
	return *o.PlaceOfBirth
}

// GetPlaceOfBirthOk returns a tuple with the PlaceOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetPlaceOfBirthOk() (*string, bool) {
	if o == nil || IsNil(o.PlaceOfBirth) {
		return nil, false
	}
	return o.PlaceOfBirth, true
}

// HasPlaceOfBirth returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasPlaceOfBirth() bool {
	if o != nil && !IsNil(o.PlaceOfBirth) {
		return true
	}

	return false
}

// SetPlaceOfBirth gets a reference to the given string and assigns it to the PlaceOfBirth field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetPlaceOfBirth(v string) {
	o.PlaceOfBirth = &v
}

// GetSpouseName returns the SpouseName field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetSpouseName() string {
	if o == nil || IsNil(o.SpouseName) {
		var ret string
		return ret
	}
	return *o.SpouseName
}

// GetSpouseNameOk returns a tuple with the SpouseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetSpouseNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpouseName) {
		return nil, false
	}
	return o.SpouseName, true
}

// HasSpouseName returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasSpouseName() bool {
	if o != nil && !IsNil(o.SpouseName) {
		return true
	}

	return false
}

// SetSpouseName gets a reference to the given string and assigns it to the SpouseName field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetSpouseName(v string) {
	o.SpouseName = &v
}

// GetWidowName returns the WidowName field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetWidowName() string {
	if o == nil || IsNil(o.WidowName) {
		var ret string
		return ret
	}
	return *o.WidowName
}

// GetWidowNameOk returns a tuple with the WidowName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetWidowNameOk() (*string, bool) {
	if o == nil || IsNil(o.WidowName) {
		return nil, false
	}
	return o.WidowName, true
}

// HasWidowName returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasWidowName() bool {
	if o != nil && !IsNil(o.WidowName) {
		return true
	}

	return false
}

// SetWidowName gets a reference to the given string and assigns it to the WidowName field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetWidowName(v string) {
	o.WidowName = &v
}

// GetAliasName returns the AliasName field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetAliasName() string {
	if o == nil || IsNil(o.AliasName) {
		var ret string
		return ret
	}
	return *o.AliasName
}

// GetAliasNameOk returns a tuple with the AliasName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetAliasNameOk() (*string, bool) {
	if o == nil || IsNil(o.AliasName) {
		return nil, false
	}
	return o.AliasName, true
}

// HasAliasName returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasAliasName() bool {
	if o != nil && !IsNil(o.AliasName) {
		return true
	}

	return false
}

// SetAliasName gets a reference to the given string and assigns it to the AliasName field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetAliasName(v string) {
	o.AliasName = &v
}

// GetIssuingAuthority returns the IssuingAuthority field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetIssuingAuthority() string {
	if o == nil || IsNil(o.IssuingAuthority) {
		var ret string
		return ret
	}
	return *o.IssuingAuthority
}

// GetIssuingAuthorityOk returns a tuple with the IssuingAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetIssuingAuthorityOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingAuthority) {
		return nil, false
	}
	return o.IssuingAuthority, true
}

// HasIssuingAuthority returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasIssuingAuthority() bool {
	if o != nil && !IsNil(o.IssuingAuthority) {
		return true
	}

	return false
}

// SetIssuingAuthority gets a reference to the given string and assigns it to the IssuingAuthority field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetIssuingAuthority(v string) {
	o.IssuingAuthority = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetRemarks(v string) {
	o.Remarks = &v
}

// GetCivilState returns the CivilState field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetCivilState() string {
	if o == nil || IsNil(o.CivilState) {
		var ret string
		return ret
	}
	return *o.CivilState
}

// GetCivilStateOk returns a tuple with the CivilState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetCivilStateOk() (*string, bool) {
	if o == nil || IsNil(o.CivilState) {
		return nil, false
	}
	return o.CivilState, true
}

// HasCivilState returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasCivilState() bool {
	if o != nil && !IsNil(o.CivilState) {
		return true
	}

	return false
}

// SetCivilState gets a reference to the given string and assigns it to the CivilState field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetCivilState(v string) {
	o.CivilState = &v
}

// GetExpatriation returns the Expatriation field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetExpatriation() string {
	if o == nil || IsNil(o.Expatriation) {
		var ret string
		return ret
	}
	return *o.Expatriation
}

// GetExpatriationOk returns a tuple with the Expatriation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetExpatriationOk() (*string, bool) {
	if o == nil || IsNil(o.Expatriation) {
		return nil, false
	}
	return o.Expatriation, true
}

// HasExpatriation returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasExpatriation() bool {
	if o != nil && !IsNil(o.Expatriation) {
		return true
	}

	return false
}

// SetExpatriation gets a reference to the given string and assigns it to the Expatriation field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetExpatriation(v string) {
	o.Expatriation = &v
}

// GetFatherName returns the FatherName field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetFatherName() string {
	if o == nil || IsNil(o.FatherName) {
		var ret string
		return ret
	}
	return *o.FatherName
}

// GetFatherNameOk returns a tuple with the FatherName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetFatherNameOk() (*string, bool) {
	if o == nil || IsNil(o.FatherName) {
		return nil, false
	}
	return o.FatherName, true
}

// HasFatherName returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasFatherName() bool {
	if o != nil && !IsNil(o.FatherName) {
		return true
	}

	return false
}

// SetFatherName gets a reference to the given string and assigns it to the FatherName field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetFatherName(v string) {
	o.FatherName = &v
}

// GetMotherName returns the MotherName field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMotherName() string {
	if o == nil || IsNil(o.MotherName) {
		var ret string
		return ret
	}
	return *o.MotherName
}

// GetMotherNameOk returns a tuple with the MotherName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetMotherNameOk() (*string, bool) {
	if o == nil || IsNil(o.MotherName) {
		return nil, false
	}
	return o.MotherName, true
}

// HasMotherName returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasMotherName() bool {
	if o != nil && !IsNil(o.MotherName) {
		return true
	}

	return false
}

// SetMotherName gets a reference to the given string and assigns it to the MotherName field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetMotherName(v string) {
	o.MotherName = &v
}

// GetReligion returns the Religion field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetReligion() string {
	if o == nil || IsNil(o.Religion) {
		var ret string
		return ret
	}
	return *o.Religion
}

// GetReligionOk returns a tuple with the Religion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetReligionOk() (*string, bool) {
	if o == nil || IsNil(o.Religion) {
		return nil, false
	}
	return o.Religion, true
}

// HasReligion returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasReligion() bool {
	if o != nil && !IsNil(o.Religion) {
		return true
	}

	return false
}

// SetReligion gets a reference to the given string and assigns it to the Religion field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetReligion(v string) {
	o.Religion = &v
}

// GetTypeOfPermit returns the TypeOfPermit field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetTypeOfPermit() string {
	if o == nil || IsNil(o.TypeOfPermit) {
		var ret string
		return ret
	}
	return *o.TypeOfPermit
}

// GetTypeOfPermitOk returns a tuple with the TypeOfPermit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetTypeOfPermitOk() (*string, bool) {
	if o == nil || IsNil(o.TypeOfPermit) {
		return nil, false
	}
	return o.TypeOfPermit, true
}

// HasTypeOfPermit returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasTypeOfPermit() bool {
	if o != nil && !IsNil(o.TypeOfPermit) {
		return true
	}

	return false
}

// SetTypeOfPermit gets a reference to the given string and assigns it to the TypeOfPermit field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetTypeOfPermit(v string) {
	o.TypeOfPermit = &v
}

// GetVersionNumber returns the VersionNumber field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetVersionNumber() string {
	if o == nil || IsNil(o.VersionNumber) {
		var ret string
		return ret
	}
	return *o.VersionNumber
}

// GetVersionNumberOk returns a tuple with the VersionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetVersionNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VersionNumber) {
		return nil, false
	}
	return o.VersionNumber, true
}

// HasVersionNumber returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasVersionNumber() bool {
	if o != nil && !IsNil(o.VersionNumber) {
		return true
	}

	return false
}

// SetVersionNumber gets a reference to the given string and assigns it to the VersionNumber field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetVersionNumber(v string) {
	o.VersionNumber = &v
}

// GetDocumentSubtype returns the DocumentSubtype field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDocumentSubtype() string {
	if o == nil || IsNil(o.DocumentSubtype) {
		var ret string
		return ret
	}
	return *o.DocumentSubtype
}

// GetDocumentSubtypeOk returns a tuple with the DocumentSubtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDocumentSubtypeOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentSubtype) {
		return nil, false
	}
	return o.DocumentSubtype, true
}

// HasDocumentSubtype returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasDocumentSubtype() bool {
	if o != nil && !IsNil(o.DocumentSubtype) {
		return true
	}

	return false
}

// SetDocumentSubtype gets a reference to the given string and assigns it to the DocumentSubtype field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetDocumentSubtype(v string) {
	o.DocumentSubtype = &v
}

// GetProfession returns the Profession field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetProfession() string {
	if o == nil || IsNil(o.Profession) {
		var ret string
		return ret
	}
	return *o.Profession
}

// GetProfessionOk returns a tuple with the Profession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetProfessionOk() (*string, bool) {
	if o == nil || IsNil(o.Profession) {
		return nil, false
	}
	return o.Profession, true
}

// HasProfession returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasProfession() bool {
	if o != nil && !IsNil(o.Profession) {
		return true
	}

	return false
}

// SetProfession gets a reference to the given string and assigns it to the Profession field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetProfession(v string) {
	o.Profession = &v
}

// GetSecurityDocumentNumber returns the SecurityDocumentNumber field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetSecurityDocumentNumber() string {
	if o == nil || IsNil(o.SecurityDocumentNumber) {
		var ret string
		return ret
	}
	return *o.SecurityDocumentNumber
}

// GetSecurityDocumentNumberOk returns a tuple with the SecurityDocumentNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetSecurityDocumentNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityDocumentNumber) {
		return nil, false
	}
	return o.SecurityDocumentNumber, true
}

// HasSecurityDocumentNumber returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasSecurityDocumentNumber() bool {
	if o != nil && !IsNil(o.SecurityDocumentNumber) {
		return true
	}

	return false
}

// SetSecurityDocumentNumber gets a reference to the given string and assigns it to the SecurityDocumentNumber field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetSecurityDocumentNumber(v string) {
	o.SecurityDocumentNumber = &v
}

// GetTaxNumber returns the TaxNumber field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetTaxNumber() string {
	if o == nil || IsNil(o.TaxNumber) {
		var ret string
		return ret
	}
	return *o.TaxNumber
}

// GetTaxNumberOk returns a tuple with the TaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetTaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxNumber) {
		return nil, false
	}
	return o.TaxNumber, true
}

// HasTaxNumber returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasTaxNumber() bool {
	if o != nil && !IsNil(o.TaxNumber) {
		return true
	}

	return false
}

// SetTaxNumber gets a reference to the given string and assigns it to the TaxNumber field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetTaxNumber(v string) {
	o.TaxNumber = &v
}

// GetNistIdentityEvidenceStrength returns the NistIdentityEvidenceStrength field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetNistIdentityEvidenceStrength() string {
	if o == nil || IsNil(o.NistIdentityEvidenceStrength) {
		var ret string
		return ret
	}
	return *o.NistIdentityEvidenceStrength
}

// GetNistIdentityEvidenceStrengthOk returns a tuple with the NistIdentityEvidenceStrength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetNistIdentityEvidenceStrengthOk() (*string, bool) {
	if o == nil || IsNil(o.NistIdentityEvidenceStrength) {
		return nil, false
	}
	return o.NistIdentityEvidenceStrength, true
}

// HasNistIdentityEvidenceStrength returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasNistIdentityEvidenceStrength() bool {
	if o != nil && !IsNil(o.NistIdentityEvidenceStrength) {
		return true
	}

	return false
}

// SetNistIdentityEvidenceStrength gets a reference to the given string and assigns it to the NistIdentityEvidenceStrength field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetNistIdentityEvidenceStrength(v string) {
	o.NistIdentityEvidenceStrength = &v
}

// GetHasIssuanceConfirmation returns the HasIssuanceConfirmation field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetHasIssuanceConfirmation() string {
	if o == nil || IsNil(o.HasIssuanceConfirmation) {
		var ret string
		return ret
	}
	return *o.HasIssuanceConfirmation
}

// GetHasIssuanceConfirmationOk returns a tuple with the HasIssuanceConfirmation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetHasIssuanceConfirmationOk() (*string, bool) {
	if o == nil || IsNil(o.HasIssuanceConfirmation) {
		return nil, false
	}
	return o.HasIssuanceConfirmation, true
}

// HasHasIssuanceConfirmation returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasHasIssuanceConfirmation() bool {
	if o != nil && !IsNil(o.HasIssuanceConfirmation) {
		return true
	}

	return false
}

// SetHasIssuanceConfirmation gets a reference to the given string and assigns it to the HasIssuanceConfirmation field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetHasIssuanceConfirmation(v string) {
	o.HasIssuanceConfirmation = &v
}

// GetRealIdCompliance returns the RealIdCompliance field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRealIdCompliance() bool {
	if o == nil || IsNil(o.RealIdCompliance) {
		var ret bool
		return ret
	}
	return *o.RealIdCompliance
}

// GetRealIdComplianceOk returns a tuple with the RealIdCompliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRealIdComplianceOk() (*bool, bool) {
	if o == nil || IsNil(o.RealIdCompliance) {
		return nil, false
	}
	return o.RealIdCompliance, true
}

// HasRealIdCompliance returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasRealIdCompliance() bool {
	if o != nil && !IsNil(o.RealIdCompliance) {
		return true
	}

	return false
}

// SetRealIdCompliance gets a reference to the given bool and assigns it to the RealIdCompliance field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetRealIdCompliance(v bool) {
	o.RealIdCompliance = &v
}

// GetSecurityTier returns the SecurityTier field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetSecurityTier() string {
	if o == nil || IsNil(o.SecurityTier) {
		var ret string
		return ret
	}
	return *o.SecurityTier
}

// GetSecurityTierOk returns a tuple with the SecurityTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetSecurityTierOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityTier) {
		return nil, false
	}
	return o.SecurityTier, true
}

// HasSecurityTier returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasSecurityTier() bool {
	if o != nil && !IsNil(o.SecurityTier) {
		return true
	}

	return false
}

// SetSecurityTier gets a reference to the given string and assigns it to the SecurityTier field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetSecurityTier(v string) {
	o.SecurityTier = &v
}

// GetAddressLines returns the AddressLines field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetAddressLines() DocumentPropertiesAddressLines {
	if o == nil || IsNil(o.AddressLines) {
		var ret DocumentPropertiesAddressLines
		return ret
	}
	return *o.AddressLines
}

// GetAddressLinesOk returns a tuple with the AddressLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetAddressLinesOk() (*DocumentPropertiesAddressLines, bool) {
	if o == nil || IsNil(o.AddressLines) {
		return nil, false
	}
	return o.AddressLines, true
}

// HasAddressLines returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasAddressLines() bool {
	if o != nil && !IsNil(o.AddressLines) {
		return true
	}

	return false
}

// SetAddressLines gets a reference to the given DocumentPropertiesAddressLines and assigns it to the AddressLines field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetAddressLines(v DocumentPropertiesAddressLines) {
	o.AddressLines = &v
}

// GetBarcode returns the Barcode field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetBarcode() []DocumentPropertiesBarcodeInner {
	if o == nil || IsNil(o.Barcode) {
		var ret []DocumentPropertiesBarcodeInner
		return ret
	}
	return o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetBarcodeOk() ([]DocumentPropertiesBarcodeInner, bool) {
	if o == nil || IsNil(o.Barcode) {
		return nil, false
	}
	return o.Barcode, true
}

// HasBarcode returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasBarcode() bool {
	if o != nil && !IsNil(o.Barcode) {
		return true
	}

	return false
}

// SetBarcode gets a reference to the given []DocumentPropertiesBarcodeInner and assigns it to the Barcode field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetBarcode(v []DocumentPropertiesBarcodeInner) {
	o.Barcode = v
}

// GetNfc returns the Nfc field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetNfc() DocumentPropertiesNfc {
	if o == nil || IsNil(o.Nfc) {
		var ret DocumentPropertiesNfc
		return ret
	}
	return *o.Nfc
}

// GetNfcOk returns a tuple with the Nfc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetNfcOk() (*DocumentPropertiesNfc, bool) {
	if o == nil || IsNil(o.Nfc) {
		return nil, false
	}
	return o.Nfc, true
}

// HasNfc returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasNfc() bool {
	if o != nil && !IsNil(o.Nfc) {
		return true
	}

	return false
}

// SetNfc gets a reference to the given DocumentPropertiesNfc and assigns it to the Nfc field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetNfc(v DocumentPropertiesNfc) {
	o.Nfc = &v
}

// GetDrivingLicenceInformation returns the DrivingLicenceInformation field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDrivingLicenceInformation() DocumentPropertiesDrivingLicenceInformation {
	if o == nil || IsNil(o.DrivingLicenceInformation) {
		var ret DocumentPropertiesDrivingLicenceInformation
		return ret
	}
	return *o.DrivingLicenceInformation
}

// GetDrivingLicenceInformationOk returns a tuple with the DrivingLicenceInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDrivingLicenceInformationOk() (*DocumentPropertiesDrivingLicenceInformation, bool) {
	if o == nil || IsNil(o.DrivingLicenceInformation) {
		return nil, false
	}
	return o.DrivingLicenceInformation, true
}

// HasDrivingLicenceInformation returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasDrivingLicenceInformation() bool {
	if o != nil && !IsNil(o.DrivingLicenceInformation) {
		return true
	}

	return false
}

// SetDrivingLicenceInformation gets a reference to the given DocumentPropertiesDrivingLicenceInformation and assigns it to the DrivingLicenceInformation field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetDrivingLicenceInformation(v DocumentPropertiesDrivingLicenceInformation) {
	o.DrivingLicenceInformation = &v
}

// GetDocumentClassification returns the DocumentClassification field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDocumentClassification() DocumentPropertiesDocumentClassification {
	if o == nil || IsNil(o.DocumentClassification) {
		var ret DocumentPropertiesDocumentClassification
		return ret
	}
	return *o.DocumentClassification
}

// GetDocumentClassificationOk returns a tuple with the DocumentClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDocumentClassificationOk() (*DocumentPropertiesDocumentClassification, bool) {
	if o == nil || IsNil(o.DocumentClassification) {
		return nil, false
	}
	return o.DocumentClassification, true
}

// HasDocumentClassification returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasDocumentClassification() bool {
	if o != nil && !IsNil(o.DocumentClassification) {
		return true
	}

	return false
}

// SetDocumentClassification gets a reference to the given DocumentPropertiesDocumentClassification and assigns it to the DocumentClassification field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetDocumentClassification(v DocumentPropertiesDocumentClassification) {
	o.DocumentClassification = &v
}

// GetExtractedData returns the ExtractedData field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetExtractedData() DocumentPropertiesExtractedData {
	if o == nil || IsNil(o.ExtractedData) {
		var ret DocumentPropertiesExtractedData
		return ret
	}
	return *o.ExtractedData
}

// GetExtractedDataOk returns a tuple with the ExtractedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetExtractedDataOk() (*DocumentPropertiesExtractedData, bool) {
	if o == nil || IsNil(o.ExtractedData) {
		return nil, false
	}
	return o.ExtractedData, true
}

// HasExtractedData returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasExtractedData() bool {
	if o != nil && !IsNil(o.ExtractedData) {
		return true
	}

	return false
}

// SetExtractedData gets a reference to the given DocumentPropertiesExtractedData and assigns it to the ExtractedData field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetExtractedData(v DocumentPropertiesExtractedData) {
	o.ExtractedData = &v
}

// GetDriversLicence returns the DriversLicence field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDriversLicence() bool {
	if o == nil || IsNil(o.DriversLicence) {
		var ret bool
		return ret
	}
	return *o.DriversLicence
}

// GetDriversLicenceOk returns a tuple with the DriversLicence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetDriversLicenceOk() (*bool, bool) {
	if o == nil || IsNil(o.DriversLicence) {
		return nil, false
	}
	return o.DriversLicence, true
}

// HasDriversLicence returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasDriversLicence() bool {
	if o != nil && !IsNil(o.DriversLicence) {
		return true
	}

	return false
}

// SetDriversLicence gets a reference to the given bool and assigns it to the DriversLicence field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetDriversLicence(v bool) {
	o.DriversLicence = &v
}

// GetRestrictedLicence returns the RestrictedLicence field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRestrictedLicence() bool {
	if o == nil || IsNil(o.RestrictedLicence) {
		var ret bool
		return ret
	}
	return *o.RestrictedLicence
}

// GetRestrictedLicenceOk returns a tuple with the RestrictedLicence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRestrictedLicenceOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictedLicence) {
		return nil, false
	}
	return o.RestrictedLicence, true
}

// HasRestrictedLicence returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasRestrictedLicence() bool {
	if o != nil && !IsNil(o.RestrictedLicence) {
		return true
	}

	return false
}

// SetRestrictedLicence gets a reference to the given bool and assigns it to the RestrictedLicence field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetRestrictedLicence(v bool) {
	o.RestrictedLicence = &v
}

// GetRawLicenceCategory returns the RawLicenceCategory field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRawLicenceCategory() string {
	if o == nil || IsNil(o.RawLicenceCategory) {
		var ret string
		return ret
	}
	return *o.RawLicenceCategory
}

// GetRawLicenceCategoryOk returns a tuple with the RawLicenceCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRawLicenceCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.RawLicenceCategory) {
		return nil, false
	}
	return o.RawLicenceCategory, true
}

// HasRawLicenceCategory returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasRawLicenceCategory() bool {
	if o != nil && !IsNil(o.RawLicenceCategory) {
		return true
	}

	return false
}

// SetRawLicenceCategory gets a reference to the given string and assigns it to the RawLicenceCategory field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetRawLicenceCategory(v string) {
	o.RawLicenceCategory = &v
}

// GetRawVehicleClasses returns the RawVehicleClasses field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRawVehicleClasses() string {
	if o == nil || IsNil(o.RawVehicleClasses) {
		var ret string
		return ret
	}
	return *o.RawVehicleClasses
}

// GetRawVehicleClassesOk returns a tuple with the RawVehicleClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetRawVehicleClassesOk() (*string, bool) {
	if o == nil || IsNil(o.RawVehicleClasses) {
		return nil, false
	}
	return o.RawVehicleClasses, true
}

// HasRawVehicleClasses returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasRawVehicleClasses() bool {
	if o != nil && !IsNil(o.RawVehicleClasses) {
		return true
	}

	return false
}

// SetRawVehicleClasses gets a reference to the given string and assigns it to the RawVehicleClasses field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetRawVehicleClasses(v string) {
	o.RawVehicleClasses = &v
}

// GetVehicleClassDetails returns the VehicleClassDetails field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetVehicleClassDetails() []DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner {
	if o == nil || IsNil(o.VehicleClassDetails) {
		var ret []DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner
		return ret
	}
	return o.VehicleClassDetails
}

// GetVehicleClassDetailsOk returns a tuple with the VehicleClassDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetVehicleClassDetailsOk() ([]DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner, bool) {
	if o == nil || IsNil(o.VehicleClassDetails) {
		return nil, false
	}
	return o.VehicleClassDetails, true
}

// HasVehicleClassDetails returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasVehicleClassDetails() bool {
	if o != nil && !IsNil(o.VehicleClassDetails) {
		return true
	}

	return false
}

// SetVehicleClassDetails gets a reference to the given []DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner and assigns it to the VehicleClassDetails field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetVehicleClassDetails(v []DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) {
	o.VehicleClassDetails = v
}

// GetPassengerVehicle returns the PassengerVehicle field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetPassengerVehicle() DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle {
	if o == nil || IsNil(o.PassengerVehicle) {
		var ret DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle
		return ret
	}
	return *o.PassengerVehicle
}

// GetPassengerVehicleOk returns a tuple with the PassengerVehicle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) GetPassengerVehicleOk() (*DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle, bool) {
	if o == nil || IsNil(o.PassengerVehicle) {
		return nil, false
	}
	return o.PassengerVehicle, true
}

// HasPassengerVehicle returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfProperties) HasPassengerVehicle() bool {
	if o != nil && !IsNil(o.PassengerVehicle) {
		return true
	}

	return false
}

// SetPassengerVehicle gets a reference to the given DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle and assigns it to the PassengerVehicle field.
func (o *DocumentWithDriverVerificationReportAllOfProperties) SetPassengerVehicle(v DocumentWithDriverVerificationReportAllOfPropertiesAllOfPassengerVehicle) {
	o.PassengerVehicle = &v
}

func (o DocumentWithDriverVerificationReportAllOfProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentWithDriverVerificationReportAllOfProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateOfBirth) {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if !IsNil(o.DateOfExpiry) {
		toSerialize["date_of_expiry"] = o.DateOfExpiry
	}
	if !IsNil(o.PersonalNumber) {
		toSerialize["personal_number"] = o.PersonalNumber
	}
	if !IsNil(o.DocumentNumbers) {
		toSerialize["document_numbers"] = o.DocumentNumbers
	}
	if !IsNil(o.DocumentType) {
		toSerialize["document_type"] = o.DocumentType
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middle_name"] = o.MiddleName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.IssuingCountry) {
		toSerialize["issuing_country"] = o.IssuingCountry
	}
	if !IsNil(o.Nationality) {
		toSerialize["nationality"] = o.Nationality
	}
	if !IsNil(o.IssuingState) {
		toSerialize["issuing_state"] = o.IssuingState
	}
	if !IsNil(o.IssuingDate) {
		toSerialize["issuing_date"] = o.IssuingDate
	}
	if !IsNil(o.Categorisation) {
		toSerialize["categorisation"] = o.Categorisation
	}
	if !IsNil(o.MrzLine1) {
		toSerialize["mrz_line1"] = o.MrzLine1
	}
	if !IsNil(o.MrzLine2) {
		toSerialize["mrz_line2"] = o.MrzLine2
	}
	if !IsNil(o.MrzLine3) {
		toSerialize["mrz_line3"] = o.MrzLine3
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.PlaceOfBirth) {
		toSerialize["place_of_birth"] = o.PlaceOfBirth
	}
	if !IsNil(o.SpouseName) {
		toSerialize["spouse_name"] = o.SpouseName
	}
	if !IsNil(o.WidowName) {
		toSerialize["widow_name"] = o.WidowName
	}
	if !IsNil(o.AliasName) {
		toSerialize["alias_name"] = o.AliasName
	}
	if !IsNil(o.IssuingAuthority) {
		toSerialize["issuing_authority"] = o.IssuingAuthority
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.CivilState) {
		toSerialize["civil_state"] = o.CivilState
	}
	if !IsNil(o.Expatriation) {
		toSerialize["expatriation"] = o.Expatriation
	}
	if !IsNil(o.FatherName) {
		toSerialize["father_name"] = o.FatherName
	}
	if !IsNil(o.MotherName) {
		toSerialize["mother_name"] = o.MotherName
	}
	if !IsNil(o.Religion) {
		toSerialize["religion"] = o.Religion
	}
	if !IsNil(o.TypeOfPermit) {
		toSerialize["type_of_permit"] = o.TypeOfPermit
	}
	if !IsNil(o.VersionNumber) {
		toSerialize["version_number"] = o.VersionNumber
	}
	if !IsNil(o.DocumentSubtype) {
		toSerialize["document_subtype"] = o.DocumentSubtype
	}
	if !IsNil(o.Profession) {
		toSerialize["profession"] = o.Profession
	}
	if !IsNil(o.SecurityDocumentNumber) {
		toSerialize["security_document_number"] = o.SecurityDocumentNumber
	}
	if !IsNil(o.TaxNumber) {
		toSerialize["tax_number"] = o.TaxNumber
	}
	if !IsNil(o.NistIdentityEvidenceStrength) {
		toSerialize["nist_identity_evidence_strength"] = o.NistIdentityEvidenceStrength
	}
	if !IsNil(o.HasIssuanceConfirmation) {
		toSerialize["has_issuance_confirmation"] = o.HasIssuanceConfirmation
	}
	if !IsNil(o.RealIdCompliance) {
		toSerialize["real_id_compliance"] = o.RealIdCompliance
	}
	if !IsNil(o.SecurityTier) {
		toSerialize["security_tier"] = o.SecurityTier
	}
	if !IsNil(o.AddressLines) {
		toSerialize["address_lines"] = o.AddressLines
	}
	if !IsNil(o.Barcode) {
		toSerialize["barcode"] = o.Barcode
	}
	if !IsNil(o.Nfc) {
		toSerialize["nfc"] = o.Nfc
	}
	if !IsNil(o.DrivingLicenceInformation) {
		toSerialize["driving_licence_information"] = o.DrivingLicenceInformation
	}
	if !IsNil(o.DocumentClassification) {
		toSerialize["document_classification"] = o.DocumentClassification
	}
	if !IsNil(o.ExtractedData) {
		toSerialize["extracted_data"] = o.ExtractedData
	}
	if !IsNil(o.DriversLicence) {
		toSerialize["drivers_licence"] = o.DriversLicence
	}
	if !IsNil(o.RestrictedLicence) {
		toSerialize["restricted_licence"] = o.RestrictedLicence
	}
	if !IsNil(o.RawLicenceCategory) {
		toSerialize["raw_licence_category"] = o.RawLicenceCategory
	}
	if !IsNil(o.RawVehicleClasses) {
		toSerialize["raw_vehicle_classes"] = o.RawVehicleClasses
	}
	if !IsNil(o.VehicleClassDetails) {
		toSerialize["vehicle_class_details"] = o.VehicleClassDetails
	}
	if !IsNil(o.PassengerVehicle) {
		toSerialize["passenger_vehicle"] = o.PassengerVehicle
	}
	return toSerialize, nil
}

type NullableDocumentWithDriverVerificationReportAllOfProperties struct {
	value *DocumentWithDriverVerificationReportAllOfProperties
	isSet bool
}

func (v NullableDocumentWithDriverVerificationReportAllOfProperties) Get() *DocumentWithDriverVerificationReportAllOfProperties {
	return v.value
}

func (v *NullableDocumentWithDriverVerificationReportAllOfProperties) Set(val *DocumentWithDriverVerificationReportAllOfProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentWithDriverVerificationReportAllOfProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentWithDriverVerificationReportAllOfProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentWithDriverVerificationReportAllOfProperties(val *DocumentWithDriverVerificationReportAllOfProperties) *NullableDocumentWithDriverVerificationReportAllOfProperties {
	return &NullableDocumentWithDriverVerificationReportAllOfProperties{value: val, isSet: true}
}

func (v NullableDocumentWithDriverVerificationReportAllOfProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentWithDriverVerificationReportAllOfProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


