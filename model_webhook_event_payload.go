/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookEventPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookEventPayload{}

// WebhookEventPayload struct for WebhookEventPayload
type WebhookEventPayload struct {
	// Indicates the resource affected by this event.
	ResourceType string `json:"resource_type"`
	// The event that triggered this webhook.
	Action *WebhookEventType `json:"action,omitempty"`
	Object *WebhookEventPayloadObject `json:"object,omitempty"`
	// The resource affected by this event.
	Resource map[string]interface{} `json:"resource,omitempty"`
}

type _WebhookEventPayload WebhookEventPayload

// NewWebhookEventPayload instantiates a new WebhookEventPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEventPayload(resourceType string) *WebhookEventPayload {
	this := WebhookEventPayload{}
	this.ResourceType = resourceType
	return &this
}

// NewWebhookEventPayloadWithDefaults instantiates a new WebhookEventPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEventPayloadWithDefaults() *WebhookEventPayload {
	this := WebhookEventPayload{}
	return &this
}

// GetResourceType returns the ResourceType field value
func (o *WebhookEventPayload) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *WebhookEventPayload) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *WebhookEventPayload) SetResourceType(v string) {
	o.ResourceType = v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *WebhookEventPayload) GetAction() WebhookEventType {
	if o == nil || IsNil(o.Action) {
		var ret WebhookEventType
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEventPayload) GetActionOk() (*WebhookEventType, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *WebhookEventPayload) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given WebhookEventType and assigns it to the Action field.
func (o *WebhookEventPayload) SetAction(v WebhookEventType) {
	o.Action = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *WebhookEventPayload) GetObject() WebhookEventPayloadObject {
	if o == nil || IsNil(o.Object) {
		var ret WebhookEventPayloadObject
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEventPayload) GetObjectOk() (*WebhookEventPayloadObject, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *WebhookEventPayload) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given WebhookEventPayloadObject and assigns it to the Object field.
func (o *WebhookEventPayload) SetObject(v WebhookEventPayloadObject) {
	o.Object = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *WebhookEventPayload) GetResource() map[string]interface{} {
	if o == nil || IsNil(o.Resource) {
		var ret map[string]interface{}
		return ret
	}
	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEventPayload) GetResourceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Resource) {
		return map[string]interface{}{}, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *WebhookEventPayload) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given map[string]interface{} and assigns it to the Resource field.
func (o *WebhookEventPayload) SetResource(v map[string]interface{}) {
	o.Resource = v
}

func (o WebhookEventPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookEventPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_type"] = o.ResourceType
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	return toSerialize, nil
}

func (o *WebhookEventPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resource_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookEventPayload := _WebhookEventPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookEventPayload)

	if err != nil {
		return err
	}

	*o = WebhookEventPayload(varWebhookEventPayload)

	return err
}

type NullableWebhookEventPayload struct {
	value *WebhookEventPayload
	isSet bool
}

func (v NullableWebhookEventPayload) Get() *WebhookEventPayload {
	return v.value
}

func (v *NullableWebhookEventPayload) Set(val *WebhookEventPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEventPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEventPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEventPayload(val *WebhookEventPayload) *NullableWebhookEventPayload {
	return &NullableWebhookEventPayload{value: val, isSet: true}
}

func (v NullableWebhookEventPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEventPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


