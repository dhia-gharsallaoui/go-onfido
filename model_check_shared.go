/*
Onfido API v3.6

The Onfido API (v3.6)

API version: v3.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CheckShared type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckShared{}

// CheckShared struct for CheckShared
type CheckShared struct {
	// An array of webhook ids describing which webhooks to trigger for this check.
	WebhookIds []string `json:"webhook_ids,omitempty"`
	// The ID of the applicant to do the check on.
	ApplicantId string `json:"applicant_id"`
	// Send an applicant form to applicant to complete to proceed with check. Defaults to false. 
	ApplicantProvidesData *bool `json:"applicant_provides_data,omitempty"`
	// Array of tags being assigned to this check.
	Tags []string `json:"tags,omitempty"`
	// For checks where `applicant_provides_data` is `true`, redirect to this URI when the applicant has submitted their data.
	RedirectUri *string `json:"redirect_uri,omitempty"`
}

type _CheckShared CheckShared

// NewCheckShared instantiates a new CheckShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckShared(applicantId string) *CheckShared {
	this := CheckShared{}
	this.ApplicantId = applicantId
	return &this
}

// NewCheckSharedWithDefaults instantiates a new CheckShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckSharedWithDefaults() *CheckShared {
	this := CheckShared{}
	return &this
}

// GetWebhookIds returns the WebhookIds field value if set, zero value otherwise.
func (o *CheckShared) GetWebhookIds() []string {
	if o == nil || IsNil(o.WebhookIds) {
		var ret []string
		return ret
	}
	return o.WebhookIds
}

// GetWebhookIdsOk returns a tuple with the WebhookIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckShared) GetWebhookIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.WebhookIds) {
		return nil, false
	}
	return o.WebhookIds, true
}

// HasWebhookIds returns a boolean if a field has been set.
func (o *CheckShared) HasWebhookIds() bool {
	if o != nil && !IsNil(o.WebhookIds) {
		return true
	}

	return false
}

// SetWebhookIds gets a reference to the given []string and assigns it to the WebhookIds field.
func (o *CheckShared) SetWebhookIds(v []string) {
	o.WebhookIds = v
}

// GetApplicantId returns the ApplicantId field value
func (o *CheckShared) GetApplicantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicantId
}

// GetApplicantIdOk returns a tuple with the ApplicantId field value
// and a boolean to check if the value has been set.
func (o *CheckShared) GetApplicantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicantId, true
}

// SetApplicantId sets field value
func (o *CheckShared) SetApplicantId(v string) {
	o.ApplicantId = v
}

// GetApplicantProvidesData returns the ApplicantProvidesData field value if set, zero value otherwise.
func (o *CheckShared) GetApplicantProvidesData() bool {
	if o == nil || IsNil(o.ApplicantProvidesData) {
		var ret bool
		return ret
	}
	return *o.ApplicantProvidesData
}

// GetApplicantProvidesDataOk returns a tuple with the ApplicantProvidesData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckShared) GetApplicantProvidesDataOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplicantProvidesData) {
		return nil, false
	}
	return o.ApplicantProvidesData, true
}

// HasApplicantProvidesData returns a boolean if a field has been set.
func (o *CheckShared) HasApplicantProvidesData() bool {
	if o != nil && !IsNil(o.ApplicantProvidesData) {
		return true
	}

	return false
}

// SetApplicantProvidesData gets a reference to the given bool and assigns it to the ApplicantProvidesData field.
func (o *CheckShared) SetApplicantProvidesData(v bool) {
	o.ApplicantProvidesData = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CheckShared) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckShared) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CheckShared) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CheckShared) SetTags(v []string) {
	o.Tags = v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *CheckShared) GetRedirectUri() string {
	if o == nil || IsNil(o.RedirectUri) {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckShared) GetRedirectUriOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUri) {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *CheckShared) HasRedirectUri() bool {
	if o != nil && !IsNil(o.RedirectUri) {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *CheckShared) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

func (o CheckShared) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckShared) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WebhookIds) {
		toSerialize["webhook_ids"] = o.WebhookIds
	}
	toSerialize["applicant_id"] = o.ApplicantId
	if !IsNil(o.ApplicantProvidesData) {
		toSerialize["applicant_provides_data"] = o.ApplicantProvidesData
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.RedirectUri) {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	return toSerialize, nil
}

func (o *CheckShared) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"applicant_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCheckShared := _CheckShared{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCheckShared)

	if err != nil {
		return err
	}

	*o = CheckShared(varCheckShared)

	return err
}

type NullableCheckShared struct {
	value *CheckShared
	isSet bool
}

func (v NullableCheckShared) Get() *CheckShared {
	return v.value
}

func (v *NullableCheckShared) Set(val *CheckShared) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckShared) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckShared(val *CheckShared) *NullableCheckShared {
	return &NullableCheckShared{value: val, isSet: true}
}

func (v NullableCheckShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


